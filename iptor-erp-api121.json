{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Iptor.com ERP API",
    "description" : "Iptor.com ERP API list",
    "termsOfService" : "Terms of service",
    "contact" : {
      "name" : "Iptor",
      "url" : "http://www.iptor.com",
      "email" : "email@domain.com"
    },
    "license" : {
      "name" : "License name",
      "url" : "http://address.domain.com/license"
    },
    "version" : "1.0.0"
  },

  "tags" : [
    {"name" : "Accounts payable"},
    {"name" : "Accounts receivable"},
    {"name" : "Alert"},
    {"name" : "Area"},
    {"name" : "Business partner"},
    {"name" : "Company"},
    {"name" : "Country"},
    {"name" : "County"},
    {"name" : "Currency"},
    {"name" : "Data interchange"},
    {"name" : "Default and replacement"},
    {"name" : "Employee"},
    {"name" : "Exchange rate"},
    {"name" : "General interface"},
    {"name" : "Incident"},
    {"name" : "Instruction"},
    {"name" : "Inventory"},
    {"name" : "Invoice"},
    {"name" : "ISO20022"},
    {"name" : "Item"},
    {"name" : "Item structure"},
    {"name" : "Language"},
    {"name" : "Location"},
    {"name" : "Manufacturing order"},
    {"name" : "Outbound shipment"},
    {"name" : "Package"},
    {"name" : "Pallet"},
    {"name" : "Peppol"},
    {"name" : "Pick label"},
    {"name" : "Pick list"},
    {"name" : "Processed cash"},
    {"name" : "Processed payment"},
    {"name" : "Purchase order"},
    {"name" : "Put away"},
    {"name" : "Replenishment"},
    {"name" : "Requests and returns"},
    {"name" : "Resource"},
    {"name" : "Sales order"},
    {"name" : "Sales pricing method"},
    {"name" : "Sales quotation"},
    {"name" : "Service order"},
    {"name" : "Signature"},
    {"name" : "State"},
    {"name" : "Stock take"},
    {"name" : "System"},
    {"name" : "Unit"},
    {"name" : "User"},
    {"name" : "Vat"},
    {"name" : "Warehouse"},
    {"name" : "CRM approval log"},
    {"name" : "CRM attribute"},
    {"name" : "CRM business partner"},
    {"name" : "CRM contact"},
    {"name" : "CRM contact DC1"},
    {"name" : "CRM domain"},
    {"name" : "CRM item"},
    {"name" : "CRM item DC1"},
    {"name" : "CRM log"},
    {"name" : "CRM note"},
    {"name" : "CRM opportunity"},
    {"name" : "CRM opportunity approval"},
    {"name" : "CRM opportunity setup"},
    {"name" : "CRM task"},
    {"name" : "CRM template"},
    {"name" : "CRM user"},

    {"name" : "Under development"},
    {"name" : "Deprecated"}
  ],  
  "paths" : {
    "/items/{item}/crossReferences" : {
      "get" : {
        "tags" : [ "Item" ],
        "summary" : "Program gets item cross references.",
        "description" : "Program gets item cross references. Parameter 'item': Mandatory Parameter 'crossrefTypes': Leave blank to get all or put wanted types in a string. If you want to see NC and NU put \"NCNU\" in the paramter. Parameter 'businessPartner': Leave blank to get all or put wanted businesspartner. This parmeter is only checked for types that require a business partner.",
        "parameters" : [ {
          "name" : "item",
          "in" : "path",
          "description" : "Internal (ASW) Item Code",
          "required" : true,
          "schema" : {
            "title" : "Internal (ASW) Item Code",
            "maxLength" : 35,
            "type" : "string",
            "description" : "Internal (ASW) Item Code"
          }
        }, {
          "name" : "crossrefTypes",
          "in" : "query",
          "schema" : {
            "maxLength" : 50,
            "type" : "string"
          }
        }, {
          "name" : "businessPartner",
          "in" : "query",
          "description" : "Customer/Supplier number",
          "schema" : {
            "title" : "Customer/Supplier number",
            "maxLength" : 11,
            "type" : "string",
            "description" : "Customer/Supplier number"
          }
        }, {
          "$ref" : "#/components/parameters/control-offset"
        }, {
          "$ref" : "#/components/parameters/control-limit"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "crossReferenceTypeDesc" : {
                                "title" : "Type",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Type"
                              },
                              "crossReferenceItem" : {
                                "title" : "Cross Reference Item",
                                "maxLength" : 35,
                                "type" : "string",
                                "description" : "Cross Reference Item"
                              },
                              "crossReferenceType" : {
                                "title" : "Cross Reference Type",
                                "maxLength" : 2,
                                "type" : "string",
                                "description" : "Cross Reference Type"
                              }
                            }
                          }
                        }
                      }
                    },
                    "control" : {
                      "title" : "Total records",
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/components/schemas/control-total"
                        }
                      },
                      "description" : "Total number of records in file (array)"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "crossReferenceItems.get",
            "openCrossRef" : true,
            "program" : "MGRR0091"
          }
        }
      }
    },
    "/currencies" : {
      "get" : {
        "tags" : [ "Currency" ],
        "summary" : "Program to get currency data from DC1",
        "description" : "Program to get currency data from DC1",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "currencyISO" : {
                                "title" : "ISO currency code",
                                "maxLength" : 3,
                                "type" : "string",
                                "description" : "ISO currency code"
                              },
                              "currencyText" : {
                                "title" : "Currency text name",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Currency text name"
                              },
                              "decimalsForAmount" : {
                                "title" : "Number of decimals for amount",
                                "maximum" : 9,
                                "type" : "integer",
                                "description" : "Number of decimals for amount",
                                "format" : "int32"
                              },
                              "decimalsForAmountToDisplay" : {
                                "title" : "Number of decimals to display amounts",
                                "maximum" : 9,
                                "type" : "integer",
                                "description" : "Number of decimals to display amounts",
                                "format" : "int32"
                              },
                              "description" : {
                                "title" : "Description (currency/country)",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Description (currency/country)"
                              },
                              "currency" : {
                                "title" : "Currency",
                                "maxLength" : 4,
                                "type" : "string",
                                "description" : "Currency"
                              },
                              "fixedExchangeRate" : {
                                "title" : "Fixed exchange rate",
                                "type" : "boolean",
                                "description" : "Fixed exchange rate"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "currencies.get",
            "openCrossRef" : true,
            "program" : "MGRR0594"
          }
        }
      },
      "post" : {
        "tags" : [ "Currency" ],
        "summary" : "Program to add currency data in DC1",
        "description" : "Program to add currency data in DC1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "currency", "currencyText", "description", "fixedExchangeRate" ],
                "type" : "object",
                "properties" : {
                  "currency" : {
                    "title" : "Currency",
                    "maxLength" : 4,
                    "type" : "string",
                    "description" : "Currency"
                  },
                  "description" : {
                    "title" : "Description (currency/country)",
                    "maxLength" : 30,
                    "type" : "string",
                    "description" : "Description (currency/country)"
                  },
                  "fixedExchangeRate" : {
                    "title" : "Fixed exchange rate",
                    "type" : "boolean",
                    "description" : "Fixed exchange rate"
                  },
                  "currencyText" : {
                    "title" : "Currency text name",
                    "maxLength" : 30,
                    "type" : "string",
                    "description" : "Currency text name"
                  },
                  "currencyISO" : {
                    "title" : "ISO currency code",
                    "maxLength" : 3,
                    "type" : "string",
                    "description" : "ISO currency code"
                  },
                  "decimalsForAmount" : {
                    "title" : "Number of decimals for amount",
                    "maximum" : 9,
                    "type" : "integer",
                    "description" : "Number of decimals for amount",
                    "format" : "int32"
                  },
                  "decimalsForAmountToDisplay" : {
                    "title" : "Number of decimals to display amounts",
                    "maximum" : 9,
                    "type" : "integer",
                    "description" : "Number of decimals to display amounts",
                    "format" : "int32"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "currency" : {
                          "title" : "Currency",
                          "maxLength" : 4,
                          "type" : "string",
                          "description" : "Currency"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "currency.add",
            "openCrossRef" : true,
            "program" : "MGRR0596"
          }
        }
      }
    },
    "/currencies/{currency}" : {
      "get" : {
        "tags" : [ "Currency" ],
        "summary" : "Program to get currency data  from DC1",
        "description" : "Program to get currency data  from DC1",
        "parameters" : [ {
          "name" : "currency",
          "in" : "path",
          "description" : "Currency",
          "required" : true,
          "schema" : {
            "title" : "Currency",
            "maxLength" : 4,
            "type" : "string",
            "description" : "Currency"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "currencyISO" : {
                          "title" : "ISO currency code",
                          "maxLength" : 3,
                          "type" : "string",
                          "description" : "ISO currency code"
                        },
                        "currencyText" : {
                          "title" : "Currency text name",
                          "maxLength" : 30,
                          "type" : "string",
                          "description" : "Currency text name"
                        },
                        "decimalsForAmount" : {
                          "title" : "Number of decimals for amount",
                          "maximum" : 9,
                          "type" : "integer",
                          "description" : "Number of decimals for amount",
                          "format" : "int32"
                        },
                        "decimalsForAmountToDisplay" : {
                          "title" : "Number of decimals to display amounts",
                          "maximum" : 9,
                          "type" : "integer",
                          "description" : "Number of decimals to display amounts",
                          "format" : "int32"
                        },
                        "description" : {
                          "title" : "Description (currency/country)",
                          "maxLength" : 30,
                          "type" : "string",
                          "description" : "Description (currency/country)"
                        },
                        "currency" : {
                          "title" : "Currency",
                          "maxLength" : 4,
                          "type" : "string",
                          "description" : "Currency"
                        },
                        "fixedExchangeRate" : {
                          "title" : "Fixed exchange rate",
                          "type" : "boolean",
                          "description" : "Fixed exchange rate"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "currency.get",
            "openCrossRef" : true,
            "program" : "MGRR0595"
          }
        }
      },
      "put" : {
        "tags" : [ "Currency" ],
        "summary" : "Program to update currency data in DC1",
        "description" : "Program to update currency data in DC1",
        "parameters" : [ {
          "name" : "currency",
          "in" : "path",
          "description" : "Currency",
          "required" : true,
          "schema" : {
            "title" : "Currency",
            "maxLength" : 4,
            "type" : "string",
            "description" : "Currency"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "title" : "Description (currency/country)",
                    "maxLength" : 30,
                    "type" : "string",
                    "description" : "Description (currency/country)"
                  },
                  "fixedExchangeRate" : {
                    "title" : "Fixed exchange rate",
                    "type" : "boolean",
                    "description" : "Fixed exchange rate"
                  },
                  "currencyText" : {
                    "title" : "Currency text name",
                    "maxLength" : 30,
                    "type" : "string",
                    "description" : "Currency text name"
                  },
                  "currencyISO" : {
                    "title" : "ISO currency code",
                    "maxLength" : 3,
                    "type" : "string",
                    "description" : "ISO currency code"
                  },
                  "decimalsForAmount" : {
                    "title" : "Number of decimals for amount",
                    "maximum" : 9,
                    "type" : "integer",
                    "description" : "Number of decimals for amount",
                    "format" : "int32"
                  },
                  "decimalsForAmountToDisplay" : {
                    "title" : "Number of decimals to display amounts",
                    "maximum" : 9,
                    "type" : "integer",
                    "description" : "Number of decimals to display amounts",
                    "format" : "int32"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "currency" : {
                          "title" : "Currency",
                          "maxLength" : 4,
                          "type" : "string",
                          "description" : "Currency"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "currency.update",
            "openCrossRef" : true,
            "program" : "MGRR0597"
          }
        }
      },
      "delete" : {
        "tags" : [ "Currency" ],
        "summary" : "Program to delet currency from DC1",
        "description" : "Program to delet currency from DC1",
        "parameters" : [ {
          "name" : "currency",
          "in" : "path",
          "description" : "Currency",
          "required" : true,
          "schema" : {
            "title" : "Currency",
            "maxLength" : 4,
            "type" : "string",
            "description" : "Currency"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "OK - no content"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "currency.delete",
            "openCrossRef" : true,
            "program" : "MGRR0598"
          }
        }
      }
    },
    "/customers/{customerNumber}/accountStatuses" : {
      "get" : {
        "tags" : [ "Business partner" ],
        "summary" : "Get customer account status",
        "description" : "Get customer account status",
        "parameters" : [ {
          "name" : "customerNumber",
          "in" : "path",
          "required": true,
          "description" : "Customer number",
          "schema" : {
            "title" : "Customer number",
            "maxLength" : 11,
            "type" : "string",
            "description" : "Customer number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "returnCode" : {
                          "title" : "Return code",
                          "maxLength" : 2,
                          "type" : "string",
                          "description" : "Return code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "customerAccountStatus.get",
            "openCrossRef" : true,
            "program" : "MGRR0132"
          }
        }
      }
    },
    "/debtors/{debtorNumber}/accountStatuses" : {
      "get" : {
        "tags" : [ "Business partner" ],
        "summary" : "Get debtor account status",
        "description" : "Get debtor account status",
        "parameters" : [ {
          "name" : "debtorNumber",
          "in" : "path",
          "required": true,
          "description" : "Debtor number",
          "schema" : {
            "title" : "Debtor number",
            "maxLength" : 11,
            "type" : "string",
            "description" : "Debtor number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "returnCode" : {
                          "title" : "Return code",
                          "maxLength" : 2,
                          "type" : "string",
                          "description" : "Return code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "customerAccountStatus.get",
            "openCrossRef" : true,
            "program" : "MGRR0132"
          }
        }
      }
    },
    "/customers/{customerNumber}/invoiceStatuses" : {
      "get" : {
        "tags" : [ "Business partner" ],
        "summary" : "This program is used to retrieve the open       ** transactions for the customer            *...",
        "description" : "This program is used to retrieve the open       ** transactions for the customer            **",
        "parameters" : [ {
          "name" : "customerNumber",
          "in" : "path",
          "required": true,
          "description" : "Customer number",
          "schema" : {
            "title" : "Customer number",
            "maxLength" : 11,
            "type" : "string",
            "description" : "Customer number"
          }
        }, {
          "$ref" : "#/components/parameters/control-offset"
        }, {
          "$ref" : "#/components/parameters/control-limit"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "documentDate" : {
                                "title" : "Document date",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Document date",
                                "format" : "date"
                              },
                              "originalAmtSCUR" : {
                                "title" : "Original amount in system currency",
                                "maximum" : 99999999999999.999,
                                "minimum" : -99999999999999.999,
                                "type" : "number",
                                "description" : "Original amount in system currency",
                                "format" : "double"
                              },
                              "remainingAmtTCUR" : {
                                "title" : "Remaining amount in transaction currency",
                                "maximum" : 99999999999999.999,
                                "minimum" : -99999999999999.999,
                                "type" : "number",
                                "description" : "Remaining amount in transaction currency",
                                "format" : "double"
                              },
                              "documentType" : {
                                "title" : "Document type",
                                "maxLength" : 3,
                                "type" : "string",
                                "description" : "Document type"
                              },
                              "originalAmtTCUR" : {
                                "title" : "Original amount in transaction currency",
                                "maximum" : 99999999999999.999,
                                "minimum" : -99999999999999.999,
                                "type" : "number",
                                "description" : "Original amount in transaction currency",
                                "format" : "double"
                              },
                              "remainingAmtSCUR" : {
                                "title" : "Remaining amount in system currency",
                                "maximum" : 99999999999999.999,
                                "minimum" : -99999999999999.999,
                                "type" : "number",
                                "description" : "Remaining amount in system currency",
                                "format" : "double"
                              },
                              "dueDate" : {
                                "title" : "Due date",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Due date",
                                "format" : "date"
                              },
                              "settlementAmtTCUR" : {
                                "title" : "Opening settled amount in transaction currency",
                                "maximum" : 99999999999999.999,
                                "minimum" : -99999999999999.999,
                                "type" : "number",
                                "description" : "Opening settled amount in transaction currency",
                                "format" : "double"
                              },
                              "customerNumber" : {
                                "title" : "Customer number",
                                "maxLength" : 11,
                                "type" : "string",
                                "description" : "Customer number"
                              },
                              "transactionText" : {
                                "title" : "Transaction text",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Transaction text"
                              },
                              "invoiceNumber" : {
                                "title" : "Document number",
                                "maximum" : 999999999999,
                                "type" : "integer",
                                "description" : "Document number",
                                "format" : "int64"
                              },
                              "currency" : {
                                "title" : "Transaction currency",
                                "maxLength" : 4,
                                "type" : "string",
                                "description" : "Transaction currency"
                              },
                              "documentTypeText" : {
                                "title" : "Description",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Description"
                              }
                            }
                          }
                        }
                      }
                    },
                    "control" : {
                      "title" : "Total records",
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/components/schemas/control-total"
                        }
                      },
                      "description" : "Total number of records in file (array)"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "customerInvoiceStatus.get",
            "openCrossRef" : true,
            "program" : "MGRR0133"
          }
        }
      }
    },
    "/debtors/{debtorNumber}/invoiceStatuses" : {
      "get" : {
        "tags" : [ "Business partner" ],
        "summary" : "This program is used to retrieve the open       ** transactions for the debtor            *...",
        "description" : "This program is used to retrieve the open       ** transactions for the debtor            **",
        "parameters" : [ {
          "name" : "debtorNumber",
          "in" : "path",
          "required": true,
          "description" : "Debtor number",
          "schema" : {
            "title" : "Debtor number",
            "maxLength" : 11,
            "type" : "string",
            "description" : "Debtor number"
          }
        }, {
          "$ref" : "#/components/parameters/control-offset"
        }, {
          "$ref" : "#/components/parameters/control-limit"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "documentDate" : {
                                "title" : "Document date",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Document date",
                                "format" : "date"
                              },
                              "originalAmtSCUR" : {
                                "title" : "Original amount in system currency",
                                "maximum" : 99999999999999.999,
                                "minimum" : -99999999999999.999,
                                "type" : "number",
                                "description" : "Original amount in system currency",
                                "format" : "double"
                              },
                              "remainingAmtTCUR" : {
                                "title" : "Remaining amount in transaction currency",
                                "maximum" : 99999999999999.999,
                                "minimum" : -99999999999999.999,
                                "type" : "number",
                                "description" : "Remaining amount in transaction currency",
                                "format" : "double"
                              },
                              "documentType" : {
                                "title" : "Document type",
                                "maxLength" : 3,
                                "type" : "string",
                                "description" : "Document type"
                              },
                              "originalAmtTCUR" : {
                                "title" : "Original amount in transaction currency",
                                "maximum" : 99999999999999.999,
                                "minimum" : -99999999999999.999,
                                "type" : "number",
                                "description" : "Original amount in transaction currency",
                                "format" : "double"
                              },
                              "remainingAmtSCUR" : {
                                "title" : "Remaining amount in system currency",
                                "maximum" : 99999999999999.999,
                                "minimum" : -99999999999999.999,
                                "type" : "number",
                                "description" : "Remaining amount in system currency",
                                "format" : "double"
                              },
                              "dueDate" : {
                                "title" : "Due date",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Due date",
                                "format" : "date"
                              },
                              "settlementAmtTCUR" : {
                                "title" : "Opening settled amount in transaction currency",
                                "maximum" : 99999999999999.999,
                                "minimum" : -99999999999999.999,
                                "type" : "number",
                                "description" : "Opening settled amount in transaction currency",
                                "format" : "double"
                              },
                              "customerNumber" : {
                                "title" : "Customer number",
                                "maxLength" : 11,
                                "type" : "string",
                                "description" : "Customer number"
                              },
                              "transactionText" : {
                                "title" : "Transaction text",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Transaction text"
                              },
                              "invoiceNumber" : {
                                "title" : "Document number",
                                "maximum" : 999999999999,
                                "type" : "integer",
                                "description" : "Document number",
                                "format" : "int64"
                              },
                              "currency" : {
                                "title" : "Transaction currency",
                                "maxLength" : 4,
                                "type" : "string",
                                "description" : "Transaction currency"
                              },
                              "documentTypeText" : {
                                "title" : "Description",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Description"
                              }
                            }
                          }
                        }
                      }
                    },
                    "control" : {
                      "title" : "Total records",
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/components/schemas/control-total"
                        }
                      },
                      "description" : "Total number of records in file (array)"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "customerInvoiceStatus.get",
            "openCrossRef" : true,
            "program" : "MGRR0133"
          }
        }
      }
    },
    "/customers/{businessPartner}/serviceLevels" : {
      "get" : {
        "tags" : [ "Business partner" ],
        "summary" : "Program to get customer service level",
        "description" : "Program to get customer service level",
        "parameters" : [ {
          "name" : "businessPartner",
          "in" : "path",
          "required": true,
          "description" : "Customer/supplier number",
          "schema" : {
            "title" : "Customer/supplier number",
            "maxLength" : 11,
            "type" : "string",
            "description" : "Customer/supplier number"
          }
        }, {
          "name" : "dispatchDateFrom",
          "in" : "query",
          "description" : "Dispatch date from",
          "schema" : {
            "title" : "Dispatch date from",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Dispatch date from",
            "format" : "date"
          }
        }, {
          "name" : "dispatchDateTo",
          "in" : "query",
          "description" : "Dispatch date to",
          "schema" : {
            "title" : "Dispatch date to",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Dispatch date to",
            "format" : "date"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "dispatchDateFrom" : {
                          "title" : "Dispatch date from",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Dispatch date from",
                          "format" : "date"
                        },
                        "businessPartner" : {
                          "title" : "Customer/supplier number",
                          "maxLength" : 11,
                          "type" : "string",
                          "description" : "Customer/supplier number"
                        },
                        "dispatchDateTo" : {
                          "title" : "Dispatch date to",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Dispatch date to",
                          "format" : "date"
                        },
                        "transactionServiceLevel" : {
                          "title" : "Transaction service level",
                          "maximum" : 999.99,
                          "minimum" : -999.99,
                          "type" : "number",
                          "description" : "Transaction service level",
                          "format" : "float"
                        },
                        "quantityServiceLevel" : {
                          "title" : "Quantity service level",
                          "maximum" : 999.99,
                          "minimum" : -999.99,
                          "type" : "number",
                          "description" : "Quantity service level",
                          "format" : "float"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "customerServiceLevel.get",
            "openCrossRef" : true,
            "program" : "MGRR1434"
          }
        }
      }
    },
    "/dataInterchangeBusinessPartners" : {
      "post" : {
        "tags" : [ "Data interchange" ],
        "summary" : "This program is used to create a DC1 Business partner",
        "description" : "This program is used to create a DC1 Business partner",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "title" : "Name",
                    "maxLength" : 30,
                    "type" : "string",
                    "description" : "Name"
                  },
                  "addressLine1" : {
                    "title" : "Address line 1",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Address line 1"
                  },
                  "addressLine2" : {
                    "title" : "Address line 2",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Address line 2"
                  },
                  "addressLine3" : {
                    "title" : "Address line 3",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Address line 3"
                  },
                  "addressLine4" : {
                    "title" : "Address line 4",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Address line 4"
                  },
                  "postalCode" : {
                    "title" : "Postal code",
                    "maxLength" : 16,
                    "type" : "string",
                    "description" : "Postal code"
                  },
                  "country" : {
                    "title" : "Country",
                    "maxLength" : 4,
                    "type" : "string",
                    "description" : "Country"
                  },
                  "state" : {
                    "title" : "State/Province Code",
                    "maxLength" : 2,
                    "type" : "string",
                    "description" : "State/Province Code"
                  },
                  "county" : {
                    "title" : "County code",
                    "maxLength" : 5,
                    "type" : "string",
                    "description" : "County code"
                  },
                  "phoneNumber" : {
                    "title" : "Phone number",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Phone number"
                  },
                  "faxNumber" : {
                    "title" : "Fax number",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Fax number"
                  },
                  "language" : {
                    "title" : "Language",
                    "maxLength" : 3,
                    "type" : "string",
                    "description" : "Language"
                  },
                  "vatRegistrationNo" : {
                    "title" : "VAT registration number",
                    "maxLength" : 16,
                    "type" : "string",
                    "description" : "VAT registration number"
                  },
                  "contactPerson" : {
                    "title" : "Contact person",
                    "maxLength" : 20,
                    "type" : "string",
                    "description" : "Contact person"
                  },
                  "mailAddress" : {
                    "title" : "E-mail address",
                    "maxLength" : 50,
                    "type" : "string",
                    "description" : "E-mail address"
                  },
                  "type" : {
                    "title" : "Type",
                    "maxLength" : 1,
                    "type" : "string",
                    "description" : "Type"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "customerOUT" : {
                          "title" : "Customer",
                          "maxLength" : 11,
                          "type" : "string",
                          "description" : "Customer"
                        },
                        "returnCode" : {
                          "title" : "Return code",
                          "maxLength" : 2,
                          "type" : "string",
                          "description" : "Return code"
                        },
                        "messageText" : {
                          "title" : "Message text",
                          "maxLength" : 132,
                          "type" : "string",
                          "description" : "Message text"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "diCreateBusinessPartner.add",
            "openCrossRef" : true,
            "program" : "MGRR1107"
          }
        }
      }
    },
    "/dataInterchangeSalesOrders" : {
      "post" : {
        "tags" : [ "Data interchange" ],
        "summary" : "This program is used to create an API Sales order header",
        "description" : "This program is used to create an API Sales order header",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "methodSubtype" ],
                "type" : "object",
                "properties" : {
                  "methodSubtype" : {
                    "title" : "Method subtype",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Method subtype"
                  },
                  "routineId" : {
                    "title" : "Routine Id",
                    "maxLength" : 6,
                    "type" : "string",
                    "description" : "Routine Id"
                  },
                  "customerOrder" : {
                    "title" : "Customers order number EDIFACT",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Customers order number EDIFACT"
                  },
                  "customer" : {
                    "title" : "Customer number",
                    "maxLength" : 11,
                    "type" : "string",
                    "description" : "Customer number"
                  },
                  "debtor" : {
                    "title" : "Debtor number",
                    "maxLength" : 11,
                    "type" : "string",
                    "description" : "Debtor number"
                  },
                  "debtorAddress" : {
                    "title" : "Debtor address number",
                    "maximum" : 999,
                    "type" : "integer",
                    "description" : "Debtor address number",
                    "format" : "int32"
                  },
                  "freightFee" : {
                    "title" : "Freight fee",
                    "maximum" : 999999999.999,
                    "minimum" : -999999999.999,
                    "type" : "number",
                    "description" : "Freight fee",
                    "format" : "double"
                  },
                  "invoiceAddress" : {
                    "title" : "Invoice address number",
                    "maximum" : 999,
                    "type" : "integer",
                    "description" : "Invoice address number",
                    "format" : "int32"
                  },
                  "invoiceCustomer" : {
                    "title" : "Invoice customer number",
                    "maxLength" : 11,
                    "type" : "string",
                    "description" : "Invoice customer number"
                  },
                  "currency" : {
                    "title" : "Currency",
                    "maxLength" : 4,
                    "type" : "string",
                    "description" : "Currency"
                  },
                  "termsOfPayment" : {
                    "title" : "Terms of payment",
                    "maxLength" : 3,
                    "type" : "string",
                    "description" : "Terms of payment"
                  },
                  "orderType" : {
                    "title" : "Order type",
                    "maxLength" : 2,
                    "type" : "string",
                    "description" : "Order type"
                  },
                  "textString" : {
                    "title" : "Text string",
                    "maxLength" : 1440,
                    "type" : "string",
                    "description" : "Text string"
                  },
                  "handler" : {
                    "title" : "Handler",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Handler"
                  },
                  "salesman" : {
                    "title" : "Salesman",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Salesman"
                  },
                  "mannerOfTransport" : {
                    "title" : "Manner of transport",
                    "maxLength" : 3,
                    "type" : "string",
                    "description" : "Manner of transport"
                  },
                  "termsOfDelivery" : {
                    "title" : "Terms of delivery",
                    "maxLength" : 3,
                    "type" : "string",
                    "description" : "Terms of delivery"
                  },
                  "customerReference" : {
                    "title" : "Customer reference",
                    "maxLength" : 20,
                    "type" : "string",
                    "description" : "Customer reference"
                  },
                  "inventoryContractNumber" : {
                    "title" : "Inventory contract number",
                    "maxLength" : 15,
                    "type" : "string",
                    "description" : "Inventory contract number"
                  },
                  "orderSource" : {
                    "title" : "Order source code",
                    "maxLength" : 3,
                    "type" : "string",
                    "description" : "Order source code"
                  },
                  "customerSupplierOrderNumberRef" : {
                    "title" : "Customers/Suppliers order number reference",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Customers/Suppliers order number reference"
                  },
                  "shippingAgent" : {
                    "title" : "Shipping agent",
                    "maxLength" : 11,
                    "type" : "string",
                    "description" : "Shipping agent"
                  },
                  "deliveryAddress" : {
                    "title" : "Delivery address",
                    "maximum" : 999,
                    "type" : "integer",
                    "description" : "Delivery address",
                    "format" : "int32"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "transmissionId" : {
                          "title" : "Transmission Id",
                          "maximum" : 999999999999999,
                          "type" : "integer",
                          "description" : "Transmission Id",
                          "format" : "int64"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "diSalesOrder.add",
            "openCrossRef" : true,
            "program" : "MGRR1103"
          }
        }
      }
    },
    "/dataInterchangeSalesOrders/{transmissionId}/addresses" : {
      "post" : {
        "tags" : [ "Data interchange" ],
        "summary" : "This program is used to create Sales order address for an API sales order",
        "description" : "This program is used to create Sales order address for an API sales order",
        "parameters" : [ {
          "name" : "transmissionId",
          "in" : "path",
          "required": true,
          "description" : "Transmision Id",
          "schema" : {
            "title" : "Transmission Id",
            "maximum" : 999999999999999,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "addressType"],
                "type" : "object",
                "properties" : {
                  "addressType" :{
                    "title" : "Address type",
                    "maxLength" : 1,
                    "type" : "string",
                    "description" : "Address type"
                  },
                  "name" : {
                    "title" : "Name",
                    "maxLength" : 30,
                    "type" : "string",
                    "description" : "Name"
                  },
                  "addressLine1" : {
                    "title" : "Address line 1",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Address line 1"
                  },
                  "addressLine2" : {
                    "title" : "Address line 2",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Address line 2"
                  },
                  "addressLine3" : {
                    "title" : "Address line 3",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Address line 3"
                  },
                  "addressLine4" : {
                    "title" : "Address line 4",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Address line 4"
                  },
                  "postalCode" : {
                    "title" : "Postal code",
                    "maxLength" : 16,
                    "type" : "string",
                    "description" : "Postal code"
                  },
                  "county" : {
                    "title" : "County code",
                    "maxLength" : 5,
                    "type" : "string",
                    "description" : "County code"
                  },
                  "state" : {
                    "title" : "State/Province Code",
                    "maxLength" : 2,
                    "type" : "string",
                    "description" : "State/Province Code"
                  },
                  "taxJurisdictionCode" : {
                    "title" : "Tax Jurisdiction Code",
                    "maxLength" : 12,
                    "type" : "string",
                    "description" : "Tax Jurisdiction Code"
                  },
                  "country" : {
                    "title" : "Country",
                    "maxLength" : 4,
                    "type" : "string",
                    "description" : "Country"
                  },
                  "vatRegistrationNo" : {
                    "title" : "VAT registration number",
                    "maxLength" : 16,
                    "type" : "string",
                    "description" : "VAT registration number"
                  },
                  "routeId" : {
                    "title" : "Route ID",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Route ID"
                  },
                  "departureID" : {
                    "title" : "Departure ID",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Departure ID"
                  },
                  "destination" : {
                    "title" : "Destination ID",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Destination ID"
                  },
                  "shippingAgent" : {
                    "title" : "Shipping agent",
                    "maxLength" : 11,
                    "type" : "string",
                    "description" : "Shipping agent"
                  },
                  "mailAddress" : {
                    "title" : "E-mail address",
                    "maxLength" : 50,
                    "type" : "string",
                    "description" : "E-mail address"
                  },
                  "orderLineNumber" : {
                    "title" : "Order line",
                    "maximum" : 999999,
                    "type" : "integer",
                    "description" : "Order line",
                    "format" : "int32"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "diSalesOrderAddress.add",
            "openCrossRef" : true,
            "program" : "MGRR1104"
          }
        }
      }
    },
    "/dataInterchangeSalesOrders/{transmissionId}" : {
      "post" : {
        "tags" : [ "Data interchange" ],
        "summary" : "This program is used to create a DC1 Sales order from a API sales order",
        "description" : "This program is used to create a DC1 Sales order from a API sales order",
        "parameters" : [ {
          "name" : "transmissionId",
          "in" : "path",
          "required": true,
          "description" : "Transmision Id",
          "schema" : {
            "title" : "Transmission Id",
            "maximum" : 999999999999999,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "routineId" : {
                    "title" : "Routine Id",
                    "maxLength" : 6,
                    "type" : "string",
                    "description" : "Routine Id"
                  },
                  "user" : {
                    "title" : "User id",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "User id"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "messageText" : {
                          "title" : "Message text",
                          "maxLength" : 132,
                          "type" : "string",
                          "description" : "Message text"
                        },
                        "returnCode" : {
                          "title" : "Return code",
                          "maxLength" : 1,
                          "type" : "string",
                          "description" : "Return code"
                        },
                        "order" : {
                          "title" : "Order number",
                          "maximum" : 9999999999999,
                          "type" : "integer",
                          "description" : "Order number",
                          "format" : "int64"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "diSalesOrderCreation.add",
            "openCrossRef" : true,
            "program" : "MGRR1106"
          }
        }
      }
    },
    "/dataInterchangeSalesOrders/{transmissionId}/lines" : {
      "post" : {
        "tags" : [ "Data interchange" ],
        "summary" : "This program is used to create Sales order line for an API sales order",
        "description" : "This program is used to create Sales order line for an API sales order",
        "parameters" : [ {
          "name" : "transmissionId",
          "in" : "path",
          "required": true,
          "description" : "Transmision Id",
          "schema" : {
            "title" : "Transmission Id",
            "maximum" : 999999999999999,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "item", "quantity"],
                "type" : "object",
                "properties" : {
                  "warehouse" : {
                    "title" : "Warehouse number",
                    "maxLength" : 3,
                    "type" : "string",
                    "description" : "Warehouse number"
                  },
                  "item" : {
                    "title" : "Item",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Item"
                  },
                  "shipmentMarking" : {
                    "title" : "Shipment marking",
                    "maxLength" : 30,
                    "type" : "string",
                    "description" : "Shipment marking"
                  },
                  "description" : {
                    "title" : "Description",
                    "maxLength" : 50,
                    "type" : "string",
                    "description" : "Description"
                  },
                  "unit" : {
                    "title" : "Unit",
                    "maxLength" : 5,
                    "type" : "string",
                    "description" : "Unit"
                  },
                  "eanNumber" : {
                    "title" : "EAN item",
                    "maxLength" : 14,
                    "type" : "string",
                    "description" : "EAN item"
                  },
                  "quantity" : {
                    "title" : "Quantity",
                    "maximum" : 999999999999.999,
                    "minimum" : -999999999999.999,
                    "type" : "number",
                    "description" : "Quantity",
                    "format" : "double"
                  },
                  "orderLineNumber" : {
                    "title" : "Order line number",
                    "maximum" : 999999,
                    "type" : "integer",
                    "description" : "Order line number",
                    "format" : "int32"
                  },
                  "dispatchTime" : {
                    "title" : "Dispatch da",
                    "maximum" : 99999999,
                    "type" : "integer",
                    "description" : "Dispatch date",
                    "format" : "int32"
                  },
                  "reqDelDate" : {
                    "title" : "Requested delivery date",
                    "maximum" : 99999999,
                    "type" : "integer",
                    "description" : "Requested delivery date",
                    "format" : "int32"
                  },
                  "customerItem" : {
                    "title" : "Customer item",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Customer item"
                  },
                  "priceUnit" : {
                    "title" : "Price unit",
                    "maxLength" : 5,
                    "type" : "string",
                    "description" : "Price unit"
                  },
                  "dispatchAddress" : {
                    "title" : "Dispatch address number",
                    "maximum" : 999,
                    "type" : "integer",
                    "description" : "Dispatch address number",
                    "format" : "int32"
                  },
                  "mannerOfTransport" : {
                    "title" : "Manner of transport",
                    "maxLength" : 3,
                    "type" : "string",
                    "description" : "Manner of transport"
                  },
                  "termsOfDelivery" : {
                    "title" : "Terms of delivery",
                    "maxLength" : 3,
                    "type" : "string",
                    "description" : "Terms of delivery"
                  },
                  "salesPrice" : {
                    "title" : "Sales price",
                    "maximum" : 999999999999.999,
                    "minimum" : -999999999999.999,
                    "type" : "number",
                    "description" : "Sales price",
                    "format" : "double"
                  },
                  "freeOfCharge" : {
                    "title" : "Free of charge Y/N",
                    "type" : "boolean",
                    "description" : "Free of charge Y/N"
                  },
                  "textString" : {
                    "title" : "Text string",
                    "maxLength" : 1440,
                    "type" : "string",
                    "description" : "Text string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "diSalesOrderLine.add",
            "openCrossRef" : true,
            "program" : "MGRR1105"
          }
        }
      }
    },
    
    "/defaultAndReplacements" : {
      "get" : {
        "tags" : [ "Default and replacement" ],
        "summary" : "Program to retrieve default and replacements groups",
        "description" : "Program to retrieve default and replacements groups",
        "parameters" : [ {
          "name" : "defaultType",
          "in" : "query",
          "description" : "Default type",
          "schema" : {
            "title" : "Default type",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default type"
          }
        }, {
          "name" : "application",
          "in" : "query",
          "description" : "Application code",
          "schema" : {
            "title" : "Application code",
            "maxLength" : 3,
            "type" : "string",
            "description" : "Application code"
          }
        }, {
          "$ref" : "#/components/parameters/control-limit"
        }, {
          "$ref" : "#/components/parameters/control-offset"
        }, {
          "$ref" : "#/components/parameters/control-orderBy"
        }, {
          "$ref" : "#/components/parameters/control-freeTextSearch"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "application" : {
                                "title" : "Application code",
                                "maxLength" : 3,
                                "type" : "string",
                                "description" : "Application code"
                              },
                              "description" : {
                                "title" : "Description",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Description"
                              },
                              "defaultType" : {
                                "title" : "Default type",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Default type"
                              }
                            }
                          }
                        }
                      }
                    },
                    "control" : {
                      "title" : "Total records",
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/components/schemas/control-total"
                        }
                      },
                      "description" : "Total number of records in file (array)"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "defaultAndReplacementsGroups.get",
            "openCrossRef" : true,
            "program" : "MGRR0578"
          }
        }
      },
      "post" : {
        "tags" : [ "Default and replacement" ],
        "summary" : "Program to add default and replacements group",
        "description" : "Program to add default and replacements group",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "application", "defaultType", "description" ],
                "type" : "object",
                "properties" : {
                  "defaultType" : {
                    "title" : "New description",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "New description"
                  },
                  "description" : {
                    "title" : "Description",
                    "maxLength" : 30,
                    "type" : "string",
                    "description" : "Description"
                  },
                  "application" : {
                    "title" : "Application code",
                    "maxLength" : 3,
                    "type" : "string",
                    "description" : "Application code"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "defaultType" : {
                          "title" : "Default type",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "New description"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "defaultAndReplacementsGroup.add",
            "openCrossRef" : true,
            "program" : "MGRR0575"
          }
        }
      }
    },
    "/defaultAndReplacements/{defaultType}" : {
      "get" : {
        "tags" : [ "Default and replacement" ],
        "summary" : "Program to retrieve default and replacements group",
        "description" : "Program to retrieve default and replacements group",
        "parameters" : [ {
          "name" : "defaultType",
          "in" : "path",
          "description" : "Default type",
          "required" : true,
          "schema" : {
            "title" : "Default type",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default type"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "application" : {
                          "title" : "Application code",
                          "maxLength" : 3,
                          "type" : "string",
                          "description" : "Application code"
                        },
                        "description" : {
                          "title" : "Description",
                          "maxLength" : 30,
                          "type" : "string",
                          "description" : "Description"
                        },
                        "defaultType" : {
                          "title" : "Default type",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Default type"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "defaultAndReplacementsGroup.get",
            "openCrossRef" : true,
            "program" : "MGRR0574"
          }
        }
      },
      "put" : {
        "tags" : [ "Default and replacement" ],
        "summary" : "Program to update default and replacements group",
        "description" : "Program to update default and replacements group",
        "parameters" : [ {
          "name" : "defaultType",
          "in" : "path",
          "description" : "Default type",
          "required" : true,
          "schema" : {
            "title" : "Default type",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default type"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "title" : "Description",
                    "maxLength" : 30,
                    "type" : "string",
                    "description" : "Description"
                  },
                  "application" : {
                    "title" : "Application code",
                    "maxLength" : 3,
                    "type" : "string",
                    "description" : "Application code"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "defaultAndReplacementsGroup.update",
            "openCrossRef" : true,
            "program" : "MGRR0576"
          }
        }
      },
      "delete" : {
        "tags" : [ "Default and replacement" ],
        "summary" : "Program to delete default and replacements group values",
        "description" : "Program to delete default and replacements group values",
        "parameters" : [ {
          "name" : "defaultType",
          "in" : "path",
          "description" : "Default type",
          "required" : true,
          "schema" : {
            "title" : "Default type",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default type"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "OK - no content"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "defaultAndReplacementsGroup.delete",
            "openCrossRef" : true,
            "program" : "MGRR0577"
          }
        }
      }
    },
    "/defaultAndReplacements/{defaultType}/levels" : {
      "get" : {
        "tags" : [ "Default and replacement" ],
        "summary" : "Program to retrieve default and replacements levels",
        "description" : "Program to retrieve default and replacements levels",
        "parameters" : [ {
          "name" : "defaultType",
          "in" : "path",
          "description" : "Default type",
          "required" : true,
          "schema" : {
            "title" : "Default type",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default type"
          }
        }, {
          "name" : "defaultLevel",
          "in" : "query",
          "description" : "Default level",
          "schema" : {
            "title" : "Default level",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default level"
          }
        }, {
          "$ref" : "#/components/parameters/control-limit"
        }, {
          "$ref" : "#/components/parameters/control-offset"
        }, {
          "$ref" : "#/components/parameters/control-orderBy"
        }, {
          "$ref" : "#/components/parameters/control-freeTextSearch"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "defaultLevel" : {
                                "title" : "Default level",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Default level"
                              },
                              "description" : {
                                "title" : "Description",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Description"
                              },
                              "fieldType" : {
                                "title" : "Field type code",
                                "maxLength" : 1,
                                "type" : "string",
                                "description" : "Field type code"
                              },
                              "defaultType" : {
                                "title" : "Default type",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Default type"
                              },
                              "fieldLength" : {
                                "title" : "Field length",
                                "maximum" : 999,
                                "type" : "integer",
                                "description" : "Field length",
                                "format" : "int32"
                              }
                            }
                          }
                        }
                      }
                    },
                    "control" : {
                      "title" : "Total records",
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/components/schemas/control-total"
                        }
                      },
                      "description" : "Total number of records in file (array)"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "defaultAndReplacementsLevels.get",
            "openCrossRef" : true,
            "program" : "MGRR0573"
          }
        }
      },
      "post" : {
        "tags" : [ "Default and replacement" ],
        "summary" : "Program to add default and replacements level",
        "description" : "Program to add default and replacements level",
        "parameters" : [ {
          "name" : "defaultType",
          "in" : "path",
          "description" : "Default type",
          "required" : true,
          "schema" : {
            "title" : "Default type",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default type"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "defaultLevel", "description" ],
                "type" : "object",
                "properties" : {                  
                  "defaultLevel" : {
                    "title" : "Default level",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Default level"
                  },
                  "description" : {
                    "title" : "Description",
                    "maxLength" : 30,
                    "type" : "string",
                    "description" : "Description"
                  },
                  "fieldType" : {
                    "title" : "Field type code",
                    "maxLength" : 1,
                    "type" : "string",
                    "description" : "Field type code"
                  },
                  "fieldLength" : {
                    "title" : "Field length",
                    "maximum" : 999,
                    "type" : "integer",
                    "description" : "Field length",
                    "format" : "int32"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "defaultLevel" : {
                          "title" : "Default level",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Default level"
                        },
                        "defaultType" : {
                          "title" : "Default type",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Default type"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "defaultAndReplacementsLevel.add",
            "openCrossRef" : true,
            "program" : "MGRR0570"
          }
        }
      }
    },
    "/defaultAndReplacements/{defaultType}/levels/{defaultLevel}" : {
      "get" : {
        "tags" : [ "Default and replacement" ],
        "summary" : "Program to retrieve default and replacements level",
        "description" : "Program to retrieve default and replacements level",
        "parameters" : [ {
          "name" : "defaultType",
          "in" : "path",
          "description" : "Default type",
          "required" : true,
          "schema" : {
            "title" : "Default type",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default type"
          }
        }, {
          "name" : "defaultLevel",
          "in" : "path",
          "description" : "Default level",
          "required" : true,
          "schema" : {
            "title" : "Default level",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default level"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "defaultLevel" : {
                          "title" : "Default level",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Default level"
                        },
                        "description" : {
                          "title" : "Description",
                          "maxLength" : 30,
                          "type" : "string",
                          "description" : "Description"
                        },
                        "fieldType" : {
                          "title" : "Field type code",
                          "maxLength" : 1,
                          "type" : "string",
                          "description" : "Field type code"
                        },
                        "defaultType" : {
                          "title" : "Default type",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Default type"
                        },
                        "fieldLength" : {
                          "title" : "Field length",
                          "maximum" : 999,
                          "type" : "integer",
                          "description" : "Field length",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "defaultAndReplacementsLevel.get",
            "openCrossRef" : true,
            "program" : "MGRR0569"
          }
        }
      },
      "put" : {
        "tags" : [ "Default and replacement" ],
        "summary" : "Program to update default and replacements level",
        "description" : "Program to update default and replacements level",
        "parameters" : [ {
          "name" : "defaultType",
          "in" : "path",
          "description" : "Default type",
          "required" : true,
          "schema" : {
            "title" : "Default type",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default type"
          }
        }, {
          "name" : "defaultLevel",
          "in" : "path",
          "description" : "Default level",
          "required" : true,
          "schema" : {
            "title" : "Default level",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default level"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "title" : "Description",
                    "maxLength" : 30,
                    "type" : "string",
                    "description" : "Description"
                  },
                  "fieldType" : {
                    "title" : "Field type code",
                    "maxLength" : 1,
                    "type" : "string",
                    "description" : "Field type code"
                  },
                  "fieldLength" : {
                    "title" : "Field length",
                    "maximum" : 999,
                    "type" : "integer",
                    "description" : "Field length",
                    "format" : "int32"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "defaultAndReplacementsLevel.update",
            "openCrossRef" : true,
            "program" : "MGRR0571"
          }
        }
      },
      "delete" : {
        "tags" : [ "Default and replacement" ],
        "summary" : "Program to delete default and replacements level values",
        "description" : "Program to delete default and replacements level values",
        "parameters" : [ {
          "name" : "defaultType",
          "in" : "path",
          "description" : "Default type",
          "required" : true,
          "schema" : {
            "title" : "Default type",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default type"
          }
        }, {
          "name" : "defaultLevel",
          "in" : "path",
          "description" : "Default level",
          "required" : true,
          "schema" : {
            "title" : "Default level",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default level"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "OK - no content"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "defaultAndReplacementsLevel.delete",
            "openCrossRef" : true,
            "program" : "MGRR0572"
          }
        }
      }
    },
    "/defaultAndReplacements/{defaultType}/levels/{defaultLevel}/keys" : {
      "get" : {
        "tags" : [ "Default and replacement" ],
        "summary" : "Program to retrieve default and replacements keys",
        "description" : "Program to retrieve default and replacements keys",
        "parameters" : [ {
          "name" : "defaultType",
          "in" : "path",
          "description" : "Default type",
          "required" : true,
          "schema" : {
            "title" : "Default type",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default type"
          }
        }, {
          "name" : "defaultLevel",
          "in" : "path",
          "description" : "Default level",
          "required" : true,
          "schema" : {
            "title" : "Default level",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default level"
          }
        }, {
          "name" : "defaultKey",
          "in" : "query",
          "description" : "Default key",
          "schema" : {
            "title" : "Default key",
            "maxLength" : 35,
            "type" : "string",
            "description" : "Default key"
          }
        }, {
          "$ref" : "#/components/parameters/control-limit"
        }, {
          "$ref" : "#/components/parameters/control-offset"
        }, {
          "$ref" : "#/components/parameters/control-orderBy"
        }, {
          "$ref" : "#/components/parameters/control-freeTextSearch"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "defaultLevel" : {
                                "title" : "Default level",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Default level"
                              },
                              "description" : {
                                "title" : "Description",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Description"
                              },
                              "defaultKey" : {
                                "title" : "Default key",
                                "maxLength" : 35,
                                "type" : "string",
                                "description" : "Default key"
                              },
                              "fieldType" : {
                                "title" : "Field type code",
                                "maxLength" : 1,
                                "type" : "string",
                                "description" : "Field type code"
                              },
                              "value" : {
                                "title" : "Value",
                                "maxLength" : 50,
                                "type" : "string",
                                "description" : "Value"
                              },
                              "defaultType" : {
                                "title" : "Default type",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Default type"
                              },
                              "fieldLength" : {
                                "title" : "Field length",
                                "maximum" : 999,
                                "type" : "integer",
                                "description" : "Field length",
                                "format" : "int32"
                              }
                            }
                          }
                        }
                      }
                    },
                    "control" : {
                      "title" : "Total records",
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/components/schemas/control-total"
                        }
                      },
                      "description" : "Total number of records in file (array)"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "defaultAndReplacementsKeys.get",
            "openCrossRef" : true,
            "program" : "MGRR0568"
          }
        }
      },
      "post" : {
        "tags" : [ "Default and replacement" ],
        "summary" : "Program to add default and replacements key values",
        "description" : "Program to add default and replacements key values",
        "parameters" : [ {
          "name" : "defaultType",
          "in" : "path",
          "description" : "Default type",
          "required" : true,
          "schema" : {
            "title" : "Default type",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default type"
          }
        }, {
          "name" : "defaultLevel",
          "in" : "path",
          "description" : "Default level",
          "required" : true,
          "schema" : {
            "title" : "Default level",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default level"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "defaultKey", "description", "value" ],
                "type" : "object",
                "properties" : {
                  "defaultKey" : {
                    "title" : "Default key",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Default key"
                  },
                  "description" : {
                    "title" : "Description",
                    "maxLength" : 30,
                    "type" : "string",
                    "description" : "Description"
                  },
                  "fieldType" : {
                    "title" : "Field type code",
                    "maxLength" : 1,
                    "type" : "string",
                    "description" : "Field type code"
                  },
                  "fieldLength" : {
                    "title" : "Field length",
                    "maximum" : 999,
                    "type" : "integer",
                    "description" : "Field length",
                    "format" : "int32"
                  },
                  "value" : {
                    "title" : "Value",
                    "maxLength" : 50,
                    "type" : "string",
                    "description" : "Value"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "defaultLevel" : {
                          "title" : "Default level",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Default level"
                        },
                        "defaultKey" : {
                          "title" : "Default key",
                          "maxLength" : 35,
                          "type" : "string",
                          "description" : "Default key"
                        },
                        "defaultType" : {
                          "title" : "Default type",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Default type"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "defaultAndReplacementsKey.add",
            "openCrossRef" : true,
            "program" : "MGRR0565"
          }
        }
      }
    },
    "/defaultAndReplacements/{defaultType}/levels/{defaultLevel}/keys/{defaultKey}" : {
      "get" : {
        "tags" : [ "Default and replacement" ],
        "summary" : "Program to retrieve default and replacements key values",
        "description" : "Program to retrieve default and replacements key values",
        "parameters" : [ {
          "name" : "defaultType",
          "in" : "path",
          "description" : "Default type",
          "required" : true,
          "schema" : {
            "title" : "Default type",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default type"
          }
        }, {
          "name" : "defaultLevel",
          "in" : "path",
          "description" : "Default level",
          "required" : true,
          "schema" : {
            "title" : "Default level",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default level"
          }
        }, {
          "name" : "defaultKey",
          "in" : "path",
          "description" : "Default key",
          "required" : true,
          "schema" : {
            "title" : "Default key",
            "maxLength" : 35,
            "type" : "string",
            "description" : "Default key"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "defaultLevel" : {
                          "title" : "Default level",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Default level"
                        },
                        "description" : {
                          "title" : "Description",
                          "maxLength" : 30,
                          "type" : "string",
                          "description" : "Description"
                        },
                        "defaultKey" : {
                          "title" : "Default key",
                          "maxLength" : 35,
                          "type" : "string",
                          "description" : "Default key"
                        },
                        "fieldType" : {
                          "title" : "Field type code",
                          "maxLength" : 1,
                          "type" : "string",
                          "description" : "Field type code"
                        },
                        "value" : {
                          "title" : "Value",
                          "maxLength" : 50,
                          "type" : "string",
                          "description" : "Value"
                        },
                        "defaultType" : {
                          "title" : "Default type",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Default type"
                        },
                        "fieldLength" : {
                          "title" : "Field length",
                          "maximum" : 999,
                          "type" : "integer",
                          "description" : "Field length",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "defaultAndReplacementsKey.get",
            "openCrossRef" : true,
            "program" : "MGRR0564"
          }
        }
      },
      "put" : {
        "tags" : [ "Default and replacement" ],
        "summary" : "Program to update default and replacements key values",
        "description" : "Program to update default and replacements key values",
        "parameters" : [ {
          "name" : "defaultType",
          "in" : "path",
          "description" : "Default type",
          "required" : true,
          "schema" : {
            "title" : "Default type",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default type"
          }
        }, {
          "name" : "defaultLevel",
          "in" : "path",
          "description" : "Default level",
          "required" : true,
          "schema" : {
            "title" : "Default level",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default level"
          }
        }, {
          "name" : "defaultKey",
          "in" : "path",
          "description" : "Default key",
          "required" : true,
          "schema" : {
            "title" : "Default key",
            "maxLength" : 35,
            "type" : "string",
            "description" : "Default key"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "title" : "Description",
                    "maxLength" : 30,
                    "type" : "string",
                    "description" : "Description"
                  },
                  "fieldType" : {
                    "title" : "Field type code",
                    "maxLength" : 1,
                    "type" : "string",
                    "description" : "Field type code"
                  },
                  "fieldLength" : {
                    "title" : "Field length",
                    "maximum" : 999,
                    "type" : "integer",
                    "description" : "Field length",
                    "format" : "int32"
                  },
                  "value" : {
                    "title" : "Value",
                    "maxLength" : 50,
                    "type" : "string",
                    "description" : "Value"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "defaultAndReplacementsKey.update",
            "openCrossRef" : true,
            "program" : "MGRR0566"
          }
        }
      },
      "delete" : {
        "tags" : [ "Default and replacement" ],
        "summary" : "Program to delete default and replacements key values",
        "description" : "Program to delete default and replacements key values",
        "parameters" : [ {
          "name" : "defaultType",
          "in" : "path",
          "description" : "Default type",
          "required" : true,
          "schema" : {
            "title" : "Default type",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default type"
          }
        }, {
          "name" : "defaultLevel",
          "in" : "path",
          "description" : "Default level",
          "required" : true,
          "schema" : {
            "title" : "Default level",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Default level"
          }
        }, {
          "name" : "defaultKey",
          "in" : "path",
          "description" : "Default key",
          "required" : true,
          "schema" : {
            "title" : "Default key",
            "maxLength" : 35,
            "type" : "string",
            "description" : "Default key"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "OK - no content"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "defaultAndReplacementsKey.delete",
            "openCrossRef" : true,
            "program" : "MGRR0567"
          }
        }
      }
    },
    "/companies" : {
      "get" : {
        "tags" : [ "Company" ],
        "summary" : "API to get list of active companies for environment",
        "description" : "API to get list of active companies for environment",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "companyCode" : {
                                "title" : "Company code",
                                "maxLength" : 2,
                                "type" : "string",
                                "description" : "Company code"
                              },
                              "name" : {
                                "title" : "Company name",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Company name"
                              },
                              "companyShortName" : {
                                "title" : "Company short name",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Company short name"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "environmentCompanies.get",
            "openCrossRef" : false,
            "program" : "MGRR0100"
          }
        }
      }
    },
    "/exchangeRates" : {
      "get" : {
        "tags" : [ "Exchange rate" ],
        "summary" : "Program to get currency exchange rates from DC1",
        "description" : "Program to get currency exchange rates from DC1",
        "parameters" : [ {
          "name" : "selectCurrency",
          "in" : "query",
          "description" : "Currency",
          "schema" : {
            "title" : "Currency",
            "maxLength" : 4,
            "type" : "string",
            "description" : "Currency"
          }
        }, {
          "name" : "selectTimeLevel",
          "in" : "query",
          "description" : "Time level",
          "schema" : {
            "title" : "Time level",
            "maximum" : 9,
            "type" : "integer",
            "description" : "Time level",
            "format" : "int32"
          }
        }, {
          "$ref" : "#/components/parameters/control-limit"
        }, {
          "$ref" : "#/components/parameters/control-offset"
        }, {
          "$ref" : "#/components/parameters/control-orderBy"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "mediumRate" : {
                                "title" : "Exchange rate level medium",
                                "maximum" : 999999.9999999,
                                "minimum" : -999999.9999999,
                                "type" : "number",
                                "description" : "Exchange rate level medium",
                                "format" : "double"
                              },
                              "highRate" : {
                                "title" : "Exchange rate level high",
                                "maximum" : 999999.9999999,
                                "minimum" : -999999.9999999,
                                "type" : "number",
                                "description" : "Exchange rate level high",
                                "format" : "double"
                              },
                              "currency" : {
                                "title" : "Currency",
                                "maxLength" : 4,
                                "type" : "string",
                                "description" : "Currency"
                              },
                              "timeLevel" : {
                                "title" : "Time level",
                                "maximum" : 9,
                                "type" : "integer",
                                "description" : "Time level",
                                "format" : "int32"
                              },
                              "lowRate" : {
                                "title" : "Exchange rate level low",
                                "maximum" : 999999.9999999,
                                "minimum" : -999999.9999999,
                                "type" : "number",
                                "description" : "Exchange rate level low",
                                "format" : "double"
                              },
                              "timeValue" : {
                                "title" : "Exchange rate time",
                                "maximum" : 99999999,
                                "type" : "integer",
                                "description" : "Exchange rate time",
                                "format" : "int32"
                              },
                              "timeLevelA" : {
                                "title" : "Time level desc",
                                "maxLength" : 1,
                                "type" : "string",
                                "description" : "Time level desc"
                              }
                            }
                          }
                        }
                      }
                    },
                    "control" : {
                      "title" : "Total records",
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/components/schemas/control-total"
                        }
                      },
                      "description" : "Total number of records in file (array)"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "exchangeRates.get",
            "openCrossRef" : true,
            "program" : "MGRR0651"
          }
        }
      },
      "post" : {
        "tags" : [ "Exchange rate" ],
        "summary" : "Program to add currency exchange rate to DC1",
        "description" : "Program to add currency exchange rate to DC1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "currency" ],
                "type" : "object",
                "properties" : {
                  "currency" : {
                    "title" : "Currency",
                    "maxLength" : 4,
                    "type" : "string",
                    "description" : "Currency"
                  },
                  "timeLevel" : {
                    "title" : "Time level",
                    "maximum" : 9,
                    "type" : "integer",
                    "description" : "Time level",
                    "format" : "int32"
                  },
                  "timeLevelA" : {
                    "title" : "Time level desc",
                    "maxLength" : 1,
                    "type" : "string",
                    "description" : "Time level desc"
                  },
                  "timeValueDate" : {
                    "title" : "Time date",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Time date",
                    "format" : "date"
                  },
                  "timeValue" : {
                    "title" : "Exchange rate time",
                    "maximum" : 99999999,
                    "type" : "integer",
                    "description" : "Exchange rate time",
                    "format" : "int32"
                  },
                  "highRate" : {
                    "title" : "Exchange rate level high",
                    "maximum" : 999999.9999999,
                    "minimum" : -999999.9999999,
                    "type" : "number",
                    "description" : "Exchange rate level high",
                    "format" : "double"
                  },
                  "mediumRate" : {
                    "title" : "Exchange rate level medium",
                    "maximum" : 999999.9999999,
                    "minimum" : -999999.9999999,
                    "type" : "number",
                    "description" : "Exchange rate level medium",
                    "format" : "double"
                  },
                  "lowRate" : {
                    "title" : "Exchange rate level low",
                    "maximum" : 999999.9999999,
                    "minimum" : -999999.9999999,
                    "type" : "number",
                    "description" : "Exchange rate level low",
                    "format" : "double"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "currency" : {
                          "title" : "Currency",
                          "maxLength" : 4,
                          "type" : "string",
                          "description" : "Currency"
                        },
                        "timeLevel" : {
                          "title" : "Time level",
                          "maximum" : 9,
                          "type" : "integer",
                          "description" : "Time level",
                          "format" : "int32"
                        },
                        "timeValue" : {
                          "title" : "Exchange rate time",
                          "maximum" : 99999999,
                          "type" : "integer",
                          "description" : "Exchange rate time",
                          "format" : "int32"
                        },
                        "timeLevelA" : {
                          "title" : "Time level desc",
                          "maxLength" : 1,
                          "type" : "string",
                          "description" : "Time level desc"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "exchangeRate.add",
            "openCrossRef" : true,
            "program" : "MGRR0652"
          }
        }
      }
    },
    "/exchangeRates/{currency}" : {
      "get" : {
        "tags" : [ "Exchange rate" ],
        "summary" : "Program to get currency exchange rates from DC1",
        "description" : "Program to get currency exchange rates from DC1",
        "parameters" : [ {
          "name" : "currency",
          "in" : "path",
          "description" : "Currency",
          "required" : true,
          "schema" : {
            "title" : "Currency",
            "maxLength" : 4,
            "type" : "string",
            "description" : "Currency"
          }
        }, {
          "name" : "timeLevel",
          "in" : "query",
          "description" : "Time level",
          "required" : true,
          "schema" : {
            "title" : "Time level",
            "maximum" : 9,
            "type" : "integer",
            "description" : "Time level",
            "format" : "int32"
          }
        }, {
          "name" : "timeValue",
          "in" : "query",
          "description" : "Exchange rate time",
          "required" : true,
          "schema" : {
            "title" : "Exchange rate time",
            "maximum" : 99999999,
            "type" : "integer",
            "description" : "Exchange rate time",
            "format" : "int32"
          }
        }, {
          "name" : "timeLevelA",
          "in" : "query",
          "description" : "Time level desc",
          "schema" : {
            "title" : "Time level desc",
            "maxLength" : 1,
            "type" : "string",
            "description" : "Time level desc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "mediumRate" : {
                          "title" : "Exchange rate level medium",
                          "maximum" : 999999.9999999,
                          "minimum" : -999999.9999999,
                          "type" : "number",
                          "description" : "Exchange rate level medium",
                          "format" : "double"
                        },
                        "highRate" : {
                          "title" : "Exchange rate level high",
                          "maximum" : 999999.9999999,
                          "minimum" : -999999.9999999,
                          "type" : "number",
                          "description" : "Exchange rate level high",
                          "format" : "double"
                        },
                        "currency" : {
                          "title" : "Currency",
                          "maxLength" : 4,
                          "type" : "string",
                          "description" : "Currency"
                        },
                        "timeLevel" : {
                          "title" : "Time level",
                          "maximum" : 9,
                          "type" : "integer",
                          "description" : "Time level",
                          "format" : "int32"
                        },
                        "lowRate" : {
                          "title" : "Exchange rate level low",
                          "maximum" : 999999.9999999,
                          "minimum" : -999999.9999999,
                          "type" : "number",
                          "description" : "Exchange rate level low",
                          "format" : "double"
                        },
                        "timeValue" : {
                          "title" : "Exchange rate time",
                          "maximum" : 99999999,
                          "type" : "integer",
                          "description" : "Exchange rate time",
                          "format" : "int32"
                        },
                        "timeLevelA" : {
                          "title" : "Time level desc",
                          "maxLength" : 1,
                          "type" : "string",
                          "description" : "Time level desc"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "exchangeRate.get",
            "openCrossRef" : true,
            "program" : "MGRR0655"
          }
        }
      },
      "put" : {
        "tags" : [ "Exchange rate" ],
        "summary" : "Program to update currency  exchange rate in DC1",
        "description" : "Program to update currency  exchange rate in DC1",
        "parameters" : [ {
          "name" : "currency",
          "in" : "path",
          "description" : "Currency",
          "required" : true,
          "schema" : {
            "title" : "Currency",
            "maxLength" : 4,
            "type" : "string",
            "description" : "Currency"
          }
        }, {
          "name" : "timeLevel",
          "in" : "query",
          "description" : "Time level",
          "required" : true,
          "schema" : {
            "title" : "Time level",
            "maximum" : 9,
            "type" : "integer",
            "description" : "Time level",
            "format" : "int32"
          }
        }, {
          "name" : "timeValue",
          "in" : "query",
          "description" : "Exchange rate time",
          "required" : true,
          "schema" : {
            "title" : "Exchange rate time",
            "maximum" : 99999999,
            "type" : "integer",
            "description" : "Exchange rate time",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "timeLevelA" : {
                    "title" : "Time level desc",
                    "maxLength" : 1,
                    "type" : "string",
                    "description" : "Time level desc"
                  },
                  "timeValueDate" : {
                    "title" : "Time date",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Time date",
                    "format" : "date"
                  },
                  "highRate" : {
                    "title" : "Exchange rate level high",
                    "maximum" : 999999.9999999,
                    "minimum" : -999999.9999999,
                    "type" : "number",
                    "description" : "Exchange rate level high",
                    "format" : "double"
                  },
                  "mediumRate" : {
                    "title" : "Exchange rate level medium",
                    "maximum" : 999999.9999999,
                    "minimum" : -999999.9999999,
                    "type" : "number",
                    "description" : "Exchange rate level medium",
                    "format" : "double"
                  },
                  "lowRate" : {
                    "title" : "Exchange rate level low",
                    "maximum" : 999999.9999999,
                    "minimum" : -999999.9999999,
                    "type" : "number",
                    "description" : "Exchange rate level low",
                    "format" : "double"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "currency" : {
                          "title" : "Currency",
                          "maxLength" : 4,
                          "type" : "string",
                          "description" : "Currency"
                        },
                        "timeLevel" : {
                          "title" : "Time level",
                          "maximum" : 9,
                          "type" : "integer",
                          "description" : "Time level",
                          "format" : "int32"
                        },
                        "timeValue" : {
                          "title" : "Exchange rate time",
                          "maximum" : 99999999,
                          "type" : "integer",
                          "description" : "Exchange rate time",
                          "format" : "int32"
                        },
                        "timeLevelA" : {
                          "title" : "Time level desc",
                          "maxLength" : 1,
                          "type" : "string",
                          "description" : "Time level desc"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "exchangeRate.update",
            "openCrossRef" : true,
            "program" : "MGRR0653"
          }
        }
      },
      "delete" : {
        "tags" : [ "Exchange rate" ],
        "summary" : "Program to delete currency exchange rate from DC1",
        "description" : "Program to delete currency exchange rate from DC1",
        "parameters" : [ {
          "name" : "currency",
          "in" : "path",
          "description" : "Currency",
          "required" : true,
          "schema" : {
            "title" : "Currency",
            "maxLength" : 4,
            "type" : "string",
            "description" : "Currency"
          }
        }, {
          "name" : "timeLevel",
          "in" : "query",
          "description" : "Time level",
          "required" : true,
          "schema" : {
            "title" : "Time level",
            "maximum" : 9,
            "type" : "integer",
            "description" : "Time level",
            "format" : "int32"
          }
        }, {
          "name" : "timeValue",
          "in" : "query",
          "description" : "Exchange rate time",
          "required" : true,
          "schema" : {
            "title" : "Exchange rate time",
            "maximum" : 99999999,
            "type" : "integer",
            "description" : "Exchange rate time",
            "format" : "int32"
          }
        }, {
          "name" : "timeLevelA",
          "in" : "query",
          "description" : "Time level desc",
          "schema" : {
            "title" : "Time level desc",
            "maxLength" : 1,
            "type" : "string",
            "description" : "Time level desc"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "OK - no content"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "exchangeRate.delete",
            "openCrossRef" : true,
            "program" : "MGRR0654"
          }
        }
      }
    },
    "/generalInterfaceNotifications/{subscriberId}/businessPartners" : {
      "get" : {
        "tags" : [ "General interface" ],
        "summary" : "Program to get business partners (SRONAM) transactions in NEW status from GI send file.",
        "description" : "Program to get business partners (SRONAM) transactions in NEW status from GI send file. If entry parameter of setPending is true then: - additionally update status to PROC_PEND, - offset value taken from Controls is not taken into consideration. By default setPending is false.",
        "parameters" : [ {
          "name" : "subscriberId",
          "in" : "path",
          "description" : "Subscriber ID",
          "required" : true,
          "schema" : {
            "title" : "Subscriber ID",
            "maxLength" : 30,
            "type" : "string",
            "description" : "Subscriber ID"
          }
        }, {
          "name" : "triggerProgram",
          "in" : "query",
          "description" : "Trigger program",
          "schema" : {
            "title" : "Trigger program",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Trigger program"
          }
        }, {
          "name" : "dataQueue",
          "in" : "query",
          "description" : "Data queue used for transaction",
          "schema" : {
            "title" : "Data queue used for transaction",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Data queue used for transaction"
          }
        }, {
          "name" : "triggerEvent",
          "in" : "query",
          "description" : "Trigger event",
          "schema" : {
            "title" : "Trigger event",
            "maxLength" : 1,
            "type" : "string",
            "description" : "Trigger event"
          }
        }, {
          "name" : "setPending",
          "in" : "query",
          "description" : "Set pending",
          "schema" : {
            "title" : "Set pending",
            "type" : "boolean",
            "description" : "Set pending"
          }
        }, {
          "$ref" : "#/components/parameters/control-offset"
        }, {
          "$ref" : "#/components/parameters/control-limit"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "file" : {
                                "title" : "File",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "File"
                              },
                              "dataQueue" : {
                                "title" : "Data queue used for transaction",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Data queue used for transaction"
                              },
                              "businessPartner" : {
                                "title" : "Customer/supplier number",
                                "maxLength" : 11,
                                "type" : "string",
                                "description" : "Customer/supplier number"
                              },
                              "subscriberId" : {
                                "title" : "Subscriber ID",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Subscriber ID"
                              },
                              "triggerEvent" : {
                                "title" : "Trigger event",
                                "maxLength" : 1,
                                "type" : "string",
                                "description" : "Trigger event"
                              },
                              "transactionKey" : {
                                "title" : "Tansaction key",
                                "maxLength" : 26,
                                "type" : "string",
                                "description" : "Tansaction key"
                              },
                              "triggerProgram" : {
                                "title" : "Trigger program",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Trigger program"
                              }
                            }
                          }
                        }
                      }
                    },
                    "control" : {
                      "title" : "Total records",
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/components/schemas/control-total"
                        }
                      },
                      "description" : "Total number of records in file (array)"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "giBusinessPartners.get",
            "openCrossRef" : true,
            "program" : "MGRR0563"
          }
        }
      }
    },
    "/generalInterfaceNotifications/{subscriberId}/contactClientLines" : {
      "get" : {
        "tags" : [ "General interface" ],
        "summary" : "Program to get contact client lines (SROCLL) transactions in NEW status from GI send file.",
        "description" : "Program to get contact client lines (SROCLL) transactions in NEW status from GI send file. If entry parameter of setPending is true then: - additionally update status to PROC_PEND, - offset value taken from Controls is not taken into consideration. By default setPending is false.",
        "parameters" : [ {
          "name" : "subscriberId",
          "in" : "path",
          "description" : "Subscriber ID",
          "required" : true,
          "schema" : {
            "title" : "Subscriber ID",
            "maxLength" : 30,
            "type" : "string",
            "description" : "Subscriber ID"
          }
        }, {
          "name" : "triggerProgram",
          "in" : "query",
          "description" : "Trigger program",
          "schema" : {
            "title" : "Trigger program",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Trigger program"
          }
        }, {
          "name" : "dataQueue",
          "in" : "query",
          "description" : "Data queue used for transaction",
          "schema" : {
            "title" : "Data queue used for transaction",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Data queue used for transaction"
          }
        }, {
          "name" : "triggerEvent",
          "in" : "query",
          "description" : "Trigger event",
          "schema" : {
            "title" : "Trigger event",
            "maxLength" : 1,
            "type" : "string",
            "description" : "Trigger event"
          }
        }, {
          "name" : "setPending",
          "in" : "query",
          "description" : "Set pending",
          "schema" : {
            "title" : "Set pending",
            "type" : "boolean",
            "description" : "Set pending"
          }
        }, {
          "$ref" : "#/components/parameters/control-offset"
        }, {
          "$ref" : "#/components/parameters/control-limit"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "file" : {
                                "title" : "File",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "File"
                              },
                              "dataQueue" : {
                                "title" : "Data queue used for transaction",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Data queue used for transaction"
                              },
                              "contactId" : {
                                "title" : "Contact ID",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Contact ID"
                              },
                              "clientName" : {
                                "title" : "Client name",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Client name"
                              },
                              "subscriberId" : {
                                "title" : "Subscriber ID",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Subscriber ID"
                              },
                              "clientParameterNumber" : {
                                "title" : "Client parameter number",
                                "maximum" : 99,
                                "type" : "integer",
                                "description" : "Client parameter number",
                                "format" : "int32"
                              },
                              "triggerEvent" : {
                                "title" : "Trigger event",
                                "maxLength" : 1,
                                "type" : "string",
                                "description" : "Trigger event"
                              },
                              "transactionKey" : {
                                "title" : "Tansaction key",
                                "maxLength" : 26,
                                "type" : "string",
                                "description" : "Tansaction key"
                              },
                              "triggerProgram" : {
                                "title" : "Trigger program",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Trigger program"
                              },
                              "userContactType" : {
                                "title" : "User/Contact type",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "User/Contact type"
                              }
                            }
                          }
                        }
                      }
                    },
                    "control" : {
                      "title" : "Total records",
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/components/schemas/control-total"
                        }
                      },
                      "description" : "Total number of records in file (array)"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "giContactClientLines.get",
            "openCrossRef" : true,
            "program" : "MGRR0562"
          }
        }
      }
    },
    "/generalInterfaceNotifications/{subscriberId}/contacts" : {
      "get" : {
        "tags" : [ "General interface" ],
        "summary" : "Program to get contacts (SROCTP) transactions in NEW status from GI send file.",
        "description" : "Program to get contacts (SROCTP) transactions in NEW status from GI send file. If entry parameter of setPending is true then: - additionally update status to PROC_PEND, - offset value taken from Controls is not taken into consideration. By default setPending is false.",
        "parameters" : [ {
          "name" : "subscriberId",
          "in" : "path",
          "description" : "Subscriber ID",
          "required" : true,
          "schema" : {
            "title" : "Subscriber ID",
            "maxLength" : 30,
            "type" : "string",
            "description" : "Subscriber ID"
          }
        }, {
          "name" : "triggerProgram",
          "in" : "query",
          "description" : "Trigger program",
          "schema" : {
            "title" : "Trigger program",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Trigger program"
          }
        }, {
          "name" : "dataQueue",
          "in" : "query",
          "description" : "Data queue used for transaction",
          "schema" : {
            "title" : "Data queue used for transaction",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Data queue used for transaction"
          }
        }, {
          "name" : "triggerEvent",
          "in" : "query",
          "description" : "Trigger event",
          "schema" : {
            "title" : "Trigger event",
            "maxLength" : 1,
            "type" : "string",
            "description" : "Trigger event"
          }
        }, {
          "name" : "setPending",
          "in" : "query",
          "description" : "Set pending",
          "schema" : {
            "title" : "Set pending",
            "type" : "boolean",
            "description" : "Set pending"
          }
        }, {
          "$ref" : "#/components/parameters/control-offset"
        }, {
          "$ref" : "#/components/parameters/control-limit"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "file" : {
                                "title" : "File",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "File"
                              },
                              "dataQueue" : {
                                "title" : "Data queue used for transaction",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Data queue used for transaction"
                              },
                              "contactId" : {
                                "title" : "Contact ID",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Contact ID"
                              },
                              "subscriberId" : {
                                "title" : "Subscriber ID",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Subscriber ID"
                              },
                              "triggerEvent" : {
                                "title" : "Trigger event",
                                "maxLength" : 1,
                                "type" : "string",
                                "description" : "Trigger event"
                              },
                              "transactionKey" : {
                                "title" : "Tansaction key",
                                "maxLength" : 26,
                                "type" : "string",
                                "description" : "Tansaction key"
                              },
                              "triggerProgram" : {
                                "title" : "Trigger program",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Trigger program"
                              }
                            }
                          }
                        }
                      }
                    },
                    "control" : {
                      "title" : "Total records",
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/components/schemas/control-total"
                        }
                      },
                      "description" : "Total number of records in file (array)"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "giContacts.get",
            "openCrossRef" : true,
            "program" : "MGRR0561"
          }
        }
      }
    },
    "/generalInterfaceNotifications/{subscriberId}/fileReadyToProcess" : {
      "get" : {
        "tags" : [ "General interface" ],
        "summary" : "Program to get files ready to be prcessed (in NEW status)",
        "description" : "Program to get files ready to be prcessed (in NEW status)",
        "parameters" : [ {
          "name" : "subscriberId",
          "in" : "path",
          "description" : "Subscriber ID",
          "required" : true,
          "schema" : {
            "title" : "Subscriber ID",
            "maxLength" : 30,
            "type" : "string",
            "description" : "Subscriber ID"
          }
        }, {
          "name" : "triggerProgram",
          "in" : "query",
          "description" : "Trigger program",
          "schema" : {
            "title" : "Trigger program",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Trigger program"
          }
        }, {
          "name" : "dataQueue",
          "in" : "query",
          "description" : "Data queue used for transaction",
          "schema" : {
            "title" : "Data queue used for transaction",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Data queue used for transaction"
          }
        }, {
          "name" : "triggerEvent",
          "in" : "query",
          "description" : "Trigger event",
          "schema" : {
            "title" : "Trigger event",
            "maxLength" : 1,
            "type" : "string",
            "description" : "Trigger event"
          }
        }, {
          "$ref" : "#/components/parameters/control-offset"
        }, {
          "$ref" : "#/components/parameters/control-limit"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "file" : {
                                "title" : "File",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "File"
                              },
                              "dataQueue" : {
                                "title" : "Data queue used for transaction",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Data queue used for transaction"
                              },
                              "subscriberId" : {
                                "title" : "Subscriber ID",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Subscriber ID"
                              },
                              "triggerEvent" : {
                                "title" : "Trigger event",
                                "maxLength" : 1,
                                "type" : "string",
                                "description" : "Trigger event"
                              },
                              "triggerProgram" : {
                                "title" : "Trigger program",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Trigger program"
                              }
                            }
                          }
                        }
                      }
                    },
                    "control" : {
                      "title" : "Total records",
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/components/schemas/control-total"
                        }
                      },
                      "description" : "Total number of records in file (array)"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "giFilesReadyToProcess.get",
            "openCrossRef" : true,
            "program" : "MGRR0554"
          }
        }
      }
    },
    "/generalInterfaceNotifications/{subscriberId}/items" : {
      "get" : {
        "tags" : [ "General interface" ],
        "summary" : "Program to get item transactions in NEW status from GI send file.",
        "description" : "Program to get item transactions in NEW status from GI send file. If entry parameter of setPending is true then: - additionally update status to PROC_PEND, - offset value taken from Controls is not taken into consideration. By default setPending is false.",
        "parameters" : [ {
          "name" : "subscriberId",
          "in" : "path",
          "description" : "Subscriber ID",
          "required" : true,
          "schema" : {
            "title" : "Subscriber ID",
            "maxLength" : 30,
            "type" : "string",
            "description" : "Subscriber ID"
          }
        }, {
          "name" : "triggerProgram",
          "in" : "query",
          "description" : "Trigger program",
          "schema" : {
            "title" : "Trigger program",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Trigger program"
          }
        }, {
          "name" : "dataQueue",
          "in" : "query",
          "description" : "Data queue used for transaction",
          "schema" : {
            "title" : "Data queue used for transaction",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Data queue used for transaction"
          }
        }, {
          "name" : "triggerEvent",
          "in" : "query",
          "description" : "Trigger event",
          "schema" : {
            "title" : "Trigger event",
            "maxLength" : 1,
            "type" : "string",
            "description" : "Trigger event"
          }
        }, {
          "name" : "setPending",
          "in" : "query",
          "description" : "Set pending",
          "schema" : {
            "title" : "Set pending",
            "type" : "boolean",
            "description" : "Set pending"
          }
        }, {
          "$ref" : "#/components/parameters/control-offset"
        }, {
          "$ref" : "#/components/parameters/control-limit"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "item" : {
                                "title" : "Item",
                                "maxLength" : 35,
                                "type" : "string",
                                "description" : "Item"
                              },
                              "file" : {
                                "title" : "File",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "File"
                              },
                              "dataQueue" : {
                                "title" : "Data queue used for transaction",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Data queue used for transaction"
                              },
                              "subscriberId" : {
                                "title" : "Subscriber ID",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Subscriber ID"
                              },
                              "triggerEvent" : {
                                "title" : "Trigger event",
                                "maxLength" : 1,
                                "type" : "string",
                                "description" : "Trigger event"
                              },
                              "transactionKey" : {
                                "title" : "Tansaction key",
                                "maxLength" : 26,
                                "type" : "string",
                                "description" : "Tansaction key"
                              },
                              "triggerProgram" : {
                                "title" : "Trigger program",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Trigger program"
                              }
                            }
                          }
                        }
                      }
                    },
                    "control" : {
                      "title" : "Total records",
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/components/schemas/control-total"
                        }
                      },
                      "description" : "Total number of records in file (array)"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "giItems.get",
            "openCrossRef" : true,
            "program" : "MGRR0551"
          }
        }
      }
    },
    "/generalInterfaceNotifications/logs" : {
      "get" : {
        "tags" : [ "General interface" ],
        "summary" : "Program to get transactions from GI log file",
        "description" : "Program to get transactions from GI log file",
        "parameters" : [ {
          "name" : "triggerProgram",
          "in" : "query",
          "description" : "Trigger program",
          "schema" : {
            "title" : "Trigger program",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Trigger program"
          }
        }, {
          "name" : "file",
          "in" : "query",
          "description" : "File",
          "schema" : {
            "title" : "File",
            "maxLength" : 10,
            "type" : "string",
            "description" : "File"
          }
        }, {
          "name" : "dataQueue",
          "in" : "query",
          "description" : "Data queue used for transaction",
          "schema" : {
            "title" : "Data queue used for transaction",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Data queue used for transaction"
          }
        }, {
          "name" : "triggerEvent",
          "in" : "query",
          "description" : "Trigger event",
          "schema" : {
            "title" : "Trigger event",
            "maxLength" : 1,
            "type" : "string",
            "description" : "Trigger event"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status",
          "schema" : {
            "title" : "Status",
            "maxLength" : 1,
            "type" : "string",
            "description" : "Status"
          }
        }, {
          "$ref" : "#/components/parameters/control-offset"
        }, {
          "$ref" : "#/components/parameters/control-limit"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "jobName" : {
                                "title" : "Job name",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Job name"
                              },
                              "jobUser" : {
                                "title" : "Job user",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Job user"
                              },
                              "lastChangedTimestamp" : {
                                "title" : "Last changed timestamp",
                                "maxLength" : 26,
                                "type" : "string",
                                "description" : "Last changed timestamp"
                              },
                              "keyValueAsString" : {
                                "title" : "Key value, alphanumeric",
                                "maxLength" : 256,
                                "type" : "string",
                                "description" : "Key value, alphanumeric"
                              },
                              "createdByUser" : {
                                "title" : "Created by",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Created by"
                              },
                              "file" : {
                                "title" : "File",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "File"
                              },
                              "dataQueue" : {
                                "title" : "Data queue used for transaction",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Data queue used for transaction"
                              },
                              "creationTimestamp" : {
                                "title" : "Creation timestamp in alpha format",
                                "maxLength" : 26,
                                "type" : "string",
                                "description" : "Creation timestamp in alpha format"
                              },
                              "triggerEvent" : {
                                "title" : "Trigger event",
                                "maxLength" : 1,
                                "type" : "string",
                                "description" : "Trigger event"
                              },
                              "changedByUser" : {
                                "title" : "Changed by user",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Changed by user"
                              },
                              "jobNumber" : {
                                "title" : "Job number",
                                "maximum" : 999999,
                                "type" : "integer",
                                "description" : "Job number",
                                "format" : "int32"
                              },
                              "triggerProgram" : {
                                "title" : "Trigger program",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Trigger program"
                              },
                              "status" : {
                                "title" : "Status",
                                "maxLength" : 1,
                                "type" : "string",
                                "description" : "Status"
                              }
                            }
                          }
                        }
                      }
                    },
                    "control" : {
                      "title" : "Total records",
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/components/schemas/control-total"
                        }
                      },
                      "description" : "Total number of records in file (array)"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "giLogs.get",
            "openCrossRef" : true,
            "program" : "MGRR0560"
          }
        }
      }
    },
    "/generalInterfaceNotifications/{subscriberId}/salesOrders" : {
      "get" : {
        "tags" : [ "General interface" ],
        "summary" : "Program to get sales order header transactions in NEW status from GI send file.",
        "description" : "Program to get sales order header transactions in NEW status from GI send file. If entry parameter of setPending is true then: - additionally update status to PROC_PEND, - offset value taken from Controls is not taken into consideration. By default setPending is false.",
        "parameters" : [ {
          "name" : "subscriberId",
          "in" : "path",
          "description" : "Subscriber ID",
          "required" : true,
          "schema" : {
            "title" : "Subscriber ID",
            "maxLength" : 30,
            "type" : "string",
            "description" : "Subscriber ID"
          }
        }, {
          "name" : "triggerProgram",
          "in" : "query",
          "description" : "Trigger program",
          "schema" : {
            "title" : "Trigger program",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Trigger program"
          }
        }, {
          "name" : "dataQueue",
          "in" : "query",
          "description" : "Data queue used for transaction",
          "schema" : {
            "title" : "Data queue used for transaction",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Data queue used for transaction"
          }
        }, {
          "name" : "triggerEvent",
          "in" : "query",
          "description" : "Trigger event",
          "schema" : {
            "title" : "Trigger event",
            "maxLength" : 1,
            "type" : "string",
            "description" : "Trigger event"
          }
        }, {
          "name" : "setPending",
          "in" : "query",
          "description" : "Set pending",
          "schema" : {
            "title" : "Set pending",
            "type" : "boolean",
            "description" : "Set pending"
          }
        }, {
          "$ref" : "#/components/parameters/control-offset"
        }, {
          "$ref" : "#/components/parameters/control-limit"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "file" : {
                                "title" : "File",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "File"
                              },
                              "dataQueue" : {
                                "title" : "Data queue used for transaction",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Data queue used for transaction"
                              },
                              "subscriberId" : {
                                "title" : "Subscriber ID",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Subscriber ID"
                              },
                              "triggerEvent" : {
                                "title" : "Trigger event",
                                "maxLength" : 1,
                                "type" : "string",
                                "description" : "Trigger event"
                              },
                              "transactionKey" : {
                                "title" : "Tansaction key",
                                "maxLength" : 26,
                                "type" : "string",
                                "description" : "Tansaction key"
                              },
                              "triggerProgram" : {
                                "title" : "Trigger program",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Trigger program"
                              },
                              "order" : {
                                "title" : "Order number",
                                "maximum" : 999999999999,
                                "type" : "integer",
                                "description" : "Order number",
                                "format" : "int64"
                              }
                            }
                          }
                        }
                      }
                    },
                    "control" : {
                      "title" : "Total records",
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/components/schemas/control-total"
                        }
                      },
                      "description" : "Total number of records in file (array)"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "giSalesOrderHeaders.get",
            "openCrossRef" : true,
            "program" : "MGRR0552"
          }
        }
      }
    },
    "/generalInterfaceNotifications/subscribers" : {
      "get" : {
        "tags" : [ "General interface" ],
        "summary" : "Program to get records from GI subscribers file",
        "description" : "Program to get records from GI subscribers file",
        "parameters" : [ {
          "name" : "subscriberId",
          "in" : "query",
          "description" : "Subscriber ID",
          "schema" : {
            "title" : "Subscriber ID",
            "maxLength" : 30,
            "type" : "string",
            "description" : "Subscriber ID"
          }
        }, {
          "name" : "file",
          "in" : "query",
          "description" : "File",
          "schema" : {
            "title" : "File",
            "maxLength" : 10,
            "type" : "string",
            "description" : "File"
          }
        }, {
          "name" : "triggerProgram",
          "in" : "query",
          "description" : "Trigger program",
          "schema" : {
            "title" : "Trigger program",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Trigger program"
          }
        }, {
          "name" : "dataQueue",
          "in" : "query",
          "description" : "Data queue used for transaction",
          "schema" : {
            "title" : "Data queue used for transaction",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Data queue used for transaction"
          }
        }, {
          "name" : "transactionProgram",
          "in" : "query",
          "description" : "Transaction program",
          "schema" : {
            "title" : "Transaction program",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Transaction program"
          }
        }, {
          "name" : "active",
          "in" : "query",
          "description" : "Active Y/N",
          "schema" : {
            "title" : "Active Y/N",
            "type" : "boolean",
            "description" : "Active Y/N"
          }
        }, {
          "$ref" : "#/components/parameters/control-offset"
        }, {
          "$ref" : "#/components/parameters/control-limit"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "sequence" : {
                                "title" : "Sequence",
                                "maximum" : 9999,
                                "type" : "integer",
                                "description" : "Sequence",
                                "format" : "int32"
                              },
                              "file" : {
                                "title" : "File",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "File"
                              },
                              "dataQueue" : {
                                "title" : "Data queue used for transaction",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Data queue used for transaction"
                              },
                              "subscriberId" : {
                                "title" : "Subscriber ID",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Subscriber ID"
                              },
                              "active" : {
                                "title" : "Active Y/N",
                                "type" : "boolean",
                                "description" : "Active Y/N"
                              },
                              "transactionProgram" : {
                                "title" : "Transaction program",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Transaction program"
                              },
                              "triggerProgram" : {
                                "title" : "Trigger program",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Trigger program"
                              }
                            }
                          }
                        }
                      }
                    },
                    "control" : {
                      "title" : "Total records",
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/components/schemas/control-total"
                        }
                      },
                      "description" : "Total number of records in file (array)"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "giSubscribers.get",
            "openCrossRef" : true,
            "program" : "MGRR0555"
          }
        }
      },
      "post" : {
        "tags" : [ "General interface" ],
        "summary" : "Program to add record to GI subscribers file",
        "description" : "Program to add record to GI subscribers file",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "file", "sequence", "subscriberId", "transactionProgram" ],
                "type" : "object",
                "properties" : {
                  "subscriberId" : {
                    "title" : "Subscriber ID",
                    "maxLength" : 30,
                    "type" : "string",
                    "description" : "Subscriber ID"
                  },
                  "file" : {
                    "title" : "File",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "File"
                  },
                  "sequence" : {
                    "title" : "Sequence",
                    "maximum" : 9999,
                    "type" : "integer",
                    "description" : "Sequence",
                    "format" : "int32"
                  },
                  "triggerProgram" : {
                    "title" : "Trigger program",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Trigger program"
                  },
                  "dataQueue" : {
                    "title" : "Data queue used for transaction",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Data queue used for transaction"
                  },
                  "transactionProgram" : {
                    "title" : "Transaction program",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Transaction program"
                  },
                  "active" : {
                    "title" : "Active Y/N",
                    "type" : "boolean",
                    "description" : "Active Y/N"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "giSubscriber.add",
            "openCrossRef" : true,
            "program" : "MGRR0557"
          }
        }
      }
    },
    "/generalInterfaceNotifications/subscribers/{subscriberId}/files/{file}/{sequence}" : {
      "get" : {
        "tags" : [ "General interface" ],
        "summary" : "Program to get record from GI subscribers file",
        "description" : "Program to get record from GI subscribers file",
        "parameters" : [ {
          "name" : "subscriberId",
          "in" : "path",
          "description" : "Subscriber ID",
          "required" : true,
          "schema" : {
            "title" : "Subscriber ID",
            "maxLength" : 30,
            "type" : "string",
            "description" : "Subscriber ID"
          }
        }, {
          "name" : "file",
          "in" : "path",
          "description" : "File",
          "required" : true,
          "schema" : {
            "title" : "File",
            "maxLength" : 10,
            "type" : "string",
            "description" : "File"
          }
        }, {
          "name" : "sequence",
          "in" : "path",
          "required" : true,
          "description" : "Sequence",
          "schema" : {
            "title" : "Sequence",
            "maximum" : 9999,
            "type" : "integer",
            "description" : "Sequence",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "sequence" : {
                          "title" : "Sequence",
                          "maximum" : 9999,
                          "type" : "integer",
                          "description" : "Sequence",
                          "format" : "int32"
                        },
                        "file" : {
                          "title" : "File",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "File"
                        },
                        "dataQueue" : {
                          "title" : "Data queue used for transaction",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Data queue used for transaction"
                        },
                        "subscriberId" : {
                          "title" : "Subscriber ID",
                          "maxLength" : 30,
                          "type" : "string",
                          "description" : "Subscriber ID"
                        },
                        "active" : {
                          "title" : "Active Y/N",
                          "type" : "boolean",
                          "description" : "Active Y/N"
                        },
                        "transactionProgram" : {
                          "title" : "Transaction program",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Transaction program"
                        },
                        "triggerProgram" : {
                          "title" : "Trigger program",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Trigger program"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "giSubscriber.get",
            "openCrossRef" : true,
            "program" : "MGRR0556"
          }
        }
      },
      "put" : {
        "tags" : [ "General interface" ],
        "summary" : "Program to update record in GI subscribers file",
        "description" : "Program to update record in GI subscribers file",
        "parameters" : [ {
          "name" : "subscriberId",
          "in" : "path",
          "description" : "Subscriber ID",
          "required" : true,
          "schema" : {
            "title" : "Subscriber ID",
            "maxLength" : 30,
            "type" : "string",
            "description" : "Subscriber ID"
          }
        }, {
          "name" : "file",
          "in" : "path",
          "description" : "File",
          "required" : true,
          "schema" : {
            "title" : "File",
            "maxLength" : 10,
            "type" : "string",
            "description" : "File"
          }
        }, {
          "name" : "sequence",
          "in" : "path",
          "required" : true,
          "description" : "Sequence",
          "schema" : {
            "title" : "Sequence",
            "maximum" : 9999,
            "type" : "integer",
            "description" : "Sequence",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "sequence" : {
                    "title" : "Sequence",
                    "maximum" : 9999,
                    "type" : "integer",
                    "description" : "Sequence",
                    "format" : "int32"
                  },
                  "triggerProgram" : {
                    "title" : "Trigger program",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Trigger program"
                  },
                  "dataQueue" : {
                    "title" : "Data queue used for transaction",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Data queue used for transaction"
                  },
                  "transactionProgram" : {
                    "title" : "Transaction program",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Transaction program"
                  },
                  "active" : {
                    "title" : "Active Y/N",
                    "type" : "boolean",
                    "description" : "Active Y/N"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "giSubscriber.update",
            "openCrossRef" : true,
            "program" : "MGRR0558"
          }
        }
      },
      "delete" : {
        "tags" : [ "General interface" ],
        "summary" : "Program to delete record from GI subscribers file",
        "description" : "Program to delete record from GI subscribers file",
        "parameters" : [ {
          "name" : "subscriberId",
          "in" : "path",
          "description" : "Subscriber ID",
          "required" : true,
          "schema" : {
            "title" : "Subscriber ID",
            "maxLength" : 30,
            "type" : "string",
            "description" : "Subscriber ID"
          }
        }, {
          "name" : "file",
          "in" : "path",
          "description" : "File",
          "required" : true,
          "schema" : {
            "title" : "File",
            "maxLength" : 10,
            "type" : "string",
            "description" : "File"
          }
        }, {
          "name" : "sequence",
          "in" : "path",
          "description" : "Sequence",
          "required" : true,
          "schema" : {
            "title" : "Sequence",
            "maximum" : 9999,
            "type" : "integer",
            "description" : "Sequence",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "OK - no content"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "giSubscriber.delete",
            "openCrossRef" : true,
            "program" : "MGRR0559"
          }
        }
      }
    },
    "/generalInterfaceNotifications/transactions" : {
      "get" : {
        "tags" : [ "General interface" ],
        "summary" : "Program to get transactions from GI send file",
        "description" : "Program to get transactions from GI send file",
        "parameters" : [ {
          "name" : "subscriberId",
          "in" : "query",
          "description" : "Subscriber ID",
          "schema" : {
            "title" : "Subscriber ID",
            "maxLength" : 30,
            "type" : "string",
            "description" : "Subscriber ID"
          }
        }, {
          "name" : "file",
          "in" : "query",
          "description" : "File",
          "schema" : {
            "title" : "File",
            "maxLength" : 10,
            "type" : "string",
            "description" : "File"
          }
        }, {
          "name" : "triggerProgram",
          "in" : "query",
          "description" : "Trigger program",
          "schema" : {
            "title" : "Trigger program",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Trigger program"
          }
        }, {
          "name" : "dataQueue",
          "in" : "query",
          "description" : "Data queue used for transaction",
          "schema" : {
            "title" : "Data queue used for transaction",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Data queue used for transaction"
          }
        }, {
          "name" : "triggerEvent",
          "in" : "query",
          "description" : "Trigger event",
          "schema" : {
            "title" : "Trigger event",
            "maxLength" : 1,
            "type" : "string",
            "description" : "Trigger event"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status",
          "schema" : {
            "title" : "Status",
            "maxLength" : 1,
            "type" : "string",
            "description" : "Status"
          }
        }, {
          "$ref" : "#/components/parameters/control-offset"
        }, {
          "$ref" : "#/components/parameters/control-limit"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "file" : {
                                "title" : "File",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "File"
                              },
                              "dataQueue" : {
                                "title" : "Data queue used for transaction",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Data queue used for transaction"
                              },
                              "subscriberId" : {
                                "title" : "Subscriber ID",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Subscriber ID"
                              },
                              "triggerEvent" : {
                                "title" : "Trigger event",
                                "maxLength" : 1,
                                "type" : "string",
                                "description" : "Trigger event"
                              },
                              "transactionKey" : {
                                "title" : "Tansaction key",
                                "maxLength" : 26,
                                "type" : "string",
                                "description" : "Tansaction key"
                              },
                              "triggerProgram" : {
                                "title" : "Trigger program",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Trigger program"
                              },
                              "status" : {
                                "title" : "Status",
                                "maxLength" : 1,
                                "type" : "string",
                                "description" : "Status"
                              }
                            }
                          }
                        }
                      }
                    },
                    "control" : {
                      "title" : "Total records",
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/components/schemas/control-total"
                        }
                      },
                      "description" : "Total number of records in file (array)"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "giTransactions.get",
            "openCrossRef" : true,
            "program" : "MGRR0550"
          }
        }
      }
    },
    "/generalInterfaceNotifications/transactionStatus/{transactionKey}" : {
      "put" : {
        "tags" : [ "General interface" ],
        "summary" : "Program to update status of transaction in GI send file.",
        "description" : "Program to update status of transaction in GI send file.",
        "parameters" : [ {
          "name" : "transactionKey",
          "in" : "path",
          "description" : "Tansaction key",
          "required" : true,
          "schema" : {
            "title" : "Tansaction key",
            "maxLength" : 26,
            "type" : "string",
            "description" : "Tansaction key"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "status" ],
                "type" : "object",
                "properties" : {
                  "status" : {
                    "title" : "Status",
                    "maxLength" : 1,
                    "type" : "string",
                    "description" : "Status"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "giTransactionStatus.update",
            "openCrossRef" : true,
            "program" : "MGRR0553"
          }
        }
      }
    },
    "/incidents" : {
      "get" : {
        "tags" : [ "Incident" ],
        "summary" : "This program is used to retrieve list of incidents",
        "description" : "This program is used to retrieve list of incidents",
        "parameters" : [ {
          "name" : "user",
          "in" : "query",
          "description" : "User id",
          "schema" : {
            "title" : "User id",
            "maxLength" : 10,
            "type" : "string",
            "description" : "User id"
          }
        }, {
          "name" : "customer",
          "in" : "query",
          "description" : "Customer number",
          "schema" : {
            "title" : "Customer number",
            "maxLength" : 11,
            "type" : "string",
            "description" : "Customer number"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "Start date",
          "schema" : {
            "title" : "Start date",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Start date",
            "format" : "date"
          }
        }, {
          "name" : "completionDate",
          "in" : "query",
          "description" : "Completion date",
          "schema" : {
            "title" : "Completion date",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Completion date",
            "format" : "date"
          }
        }, {
          "name" : "dueDate",
          "in" : "query",
          "description" : "Due date",
          "schema" : {
            "title" : "Due date",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Due date",
            "format" : "date"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status",
          "schema" : {
            "title" : "Status",
            "maxLength" : 1,
            "type" : "string",
            "description" : "Status"
          }
        }, {
          "name" : "callType",
          "in" : "query",
          "description" : "Call Type",
          "schema" : {
            "title" : "Call Type",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Call Type"
          }
        }, {
          "name" : "text",
          "in" : "query",
          "description" : "Text string",
          "schema" : {
            "title" : "Text string",
            "maxLength" : 1400,
            "type" : "string",
            "description" : "Text string"
          }
        }, {
          "$ref" : "#/components/parameters/control-offset"
        }, {
          "$ref" : "#/components/parameters/control-limit"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "completionTime" : {
                                "title" : "Completion time",
                                "maxLength" : 8,
                                "type" : "string",
                                "description" : "Completion time",
                                "format" : "time"
                              },
                              "incidentKey" : {
                                "title" : "Key",
                                "maxLength" : 8,
                                "type" : "string",
                                "description" : "Key"
                              },
                              "dueDate" : {
                                "title" : "Due date",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Due date",
                                "format" : "date"
                              },
                              "startTime" : {
                                "title" : "Start time",
                                "maxLength" : 8,
                                "type" : "string",
                                "description" : "Start time",
                                "format" : "time"
                              },
                              "completionDate" : {
                                "title" : "Completion date",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Completion date",
                                "format" : "date"
                              },
                              "text" : {
                                "title" : "Text string",
                                "maxLength" : 1400,
                                "type" : "string",
                                "description" : "Text string"
                              },
                              "user" : {
                                "title" : "User id",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "User id"
                              },
                              "startDate" : {
                                "title" : "Start date",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Start date",
                                "format" : "date"
                              },
                              "callType" : {
                                "title" : "Call Type",
                                "maxLength" : 10,
                                "type" : "string",
                                "description" : "Call Type"
                              },
                              "timestamp" : {
                                "title" : "Timestamp in alpha format",
                                "maxLength" : 26,
                                "type" : "string",
                                "description" : "Timestamp in alpha format"
                              },
                              "customer" : {
                                "title" : "Customer number",
                                "maxLength" : 11,
                                "type" : "string",
                                "description" : "Customer number"
                              },
                              "status" : {
                                "title" : "Status",
                                "maxLength" : 1,
                                "type" : "string",
                                "description" : "Status"
                              }
                            }
                          }
                        }
                      }
                    },
                    "control" : {
                      "title" : "Total records",
                      "type" : "object",
                      "properties" : {
                        "total" : {
                          "$ref" : "#/components/schemas/control-total"
                        }
                      },
                      "description" : "Total number of records in file (array)"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "incidents.get",
            "openCrossRef" : true,
            "program" : "MGRR0127"
          }
        }
      },
      "post" : {
        "tags" : [ "Incident" ],
        "summary" : "This program is used to add new incident",
        "description" : "This program is used to add new incident",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "user" ],
                "type" : "object",
                "properties" : {
                  "user" : {
                    "title" : "User id",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "User id"
                  },
                  "customer" : {
                    "title" : "Customer number",
                    "maxLength" : 11,
                    "type" : "string",
                    "description" : "Customer number"
                  },
                  "startDate" : {
                    "title" : "Start date",
                    "maximum" : 99999999,
                    "type" : "integer",
                    "description" : "Start date",
                    "format" : "int32"
                  },
                  "startTime" : {
                    "title" : "Start time",
                    "maximum" : 999999,
                    "type" : "integer",
                    "description" : "Start time",
                    "format" : "int32"
                  },
                  "completionDate" : {
                    "title" : "Completion date",
                    "maximum" : 99999999,
                    "type" : "integer",
                    "description" : "Completion date",
                    "format" : "int32"
                  },
                  "completionTime" : {
                    "title" : "Completion time",
                    "maximum" : 999999,
                    "type" : "integer",
                    "description" : "Completion time",
                    "format" : "int32"
                  },
                  "dueDate" : {
                    "title" : "due date",
                    "maximum" : 99999999,
                    "type" : "integer",
                    "description" : "due date",
                    "format" : "int32"
                  },
                  "status" : {
                    "title" : "Status",
                    "maxLength" : 1,
                    "type" : "string",
                    "description" : "Status"
                  },
                  "callType" : {
                    "title" : "Call Type",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Call Type"
                  },
                  "text" : {
                    "title" : "Text string",
                    "maxLength" : 1400,
                    "type" : "string",
                    "description" : "Text string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "completionTime" : {
                          "title" : "Completion time",
                          "maximum" : 999999,
                          "type" : "integer",
                          "description" : "Completion time",
                          "format" : "int32"
                        },
                        "incidentKey" : {
                          "title" : "Key",
                          "maxLength" : 8,
                          "type" : "string",
                          "description" : "Key"
                        },
                        "dueDate" : {
                          "title" : "Due date",
                          "maximum" : 99999999,
                          "type" : "integer",
                          "description" : "Due date",
                          "format" : "int32"
                        },
                        "startTime" : {
                          "title" : "Start time",
                          "maximum" : 999999,
                          "type" : "integer",
                          "description" : "Start time",
                          "format" : "int32"
                        },
                        "completionDate" : {
                          "title" : "Completion date",
                          "maximum" : 99999999,
                          "type" : "integer",
                          "description" : "Completion date",
                          "format" : "int32"
                        },
                        "text" : {
                          "title" : "Text string",
                          "maxLength" : 1400,
                          "type" : "string",
                          "description" : "Text string"
                        },
                        "user" : {
                          "title" : "User id",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "User id"
                        },
                        "startDate" : {
                          "title" : "Start date",
                          "maximum" : 99999999,
                          "type" : "integer",
                          "description" : "Start date",
                          "format" : "int32"
                        },
                        "callType" : {
                          "title" : "Call Type",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Call Type"
                        },
                        "timestamp" : {
                          "title" : "Timestamp in alpha format",
                          "maxLength" : 26,
                          "type" : "string",
                          "description" : "Timestamp in alpha format"
                        },
                        "customer" : {
                          "title" : "Customer number",
                          "maxLength" : 11,
                          "type" : "string",
                          "description" : "Customer number"
                        },
                        "status" : {
                          "title" : "Status",
                          "maxLength" : 1,
                          "type" : "string",
                          "description" : "Status"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "incident.add",
            "openCrossRef" : true,
            "program" : "MGRR0065"
          }
        }
      }
    },
    "/incidents/{incidentKey}" : {
      "get" : {
        "tags" : [ "Incident" ],
        "summary" : "This program is used to retrieve detail information about incident",
        "description" : "This program is used to retrieve detail information about incident",
        "parameters" : [ {
          "name" : "incidentKey",
          "in" : "path",
          "description" : "Key",
          "required" : true,
          "schema" : {
            "title" : "Key",
            "maxLength" : 8,
            "type" : "string",
            "description" : "Key"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "completionTime" : {
                          "title" : "Completion time",
                          "maximum" : 999999,
                          "type" : "integer",
                          "description" : "Completion time",
                          "format" : "int32"
                        },
                        "incidentKey" : {
                          "title" : "Key",
                          "maxLength" : 8,
                          "type" : "string",
                          "description" : "Key"
                        },
                        "dueDate" : {
                          "title" : "Due date",
                          "maximum" : 99999999,
                          "type" : "integer",
                          "description" : "Due date",
                          "format" : "int32"
                        },
                        "startTime" : {
                          "title" : "Start time",
                          "maximum" : 999999,
                          "type" : "integer",
                          "description" : "Start time",
                          "format" : "int32"
                        },
                        "completionDate" : {
                          "title" : "Completion date",
                          "maximum" : 99999999,
                          "type" : "integer",
                          "description" : "Completion date",
                          "format" : "int32"
                        },
                        "text" : {
                          "title" : "Text string",
                          "maxLength" : 1400,
                          "type" : "string",
                          "description" : "Text string"
                        },
                        "user" : {
                          "title" : "User id",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "User id"
                        },
                        "startDate" : {
                          "title" : "Start date",
                          "maximum" : 99999999,
                          "type" : "integer",
                          "description" : "Start date",
                          "format" : "int32"
                        },
                        "callType" : {
                          "title" : "Call Type",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Call Type"
                        },
                        "timestamp" : {
                          "title" : "Timestamp in alpha format",
                          "maxLength" : 26,
                          "type" : "string",
                          "description" : "Timestamp in alpha format"
                        },
                        "customer" : {
                          "title" : "Customer number",
                          "maxLength" : 11,
                          "type" : "string",
                          "description" : "Customer number"
                        },
                        "status" : {
                          "title" : "Status",
                          "maxLength" : 1,
                          "type" : "string",
                          "description" : "Status"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "incident.get",
            "openCrossRef" : true,
            "program" : "MGRR0064"
          }
        }
      },
      "put" : {
        "tags" : [ "Incident" ],
        "summary" : "This program is used to update existing incident",
        "description" : "This program is used to update existing incident",
        "parameters" : [ {
          "name" : "incidentKey",
          "in" : "path",
          "description" : "Key",
          "required" : true,
          "schema" : {
            "title" : "Key",
            "maxLength" : 8,
            "type" : "string",
            "description" : "Key"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "user" : {
                    "title" : "User id",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "User id"
                  },
                  "customer" : {
                    "title" : "Customer number",
                    "maxLength" : 11,
                    "type" : "string",
                    "description" : "Customer number"
                  },
                  "startDate" : {
                    "title" : "Start date",
                    "maximum" : 99999999,
                    "type" : "integer",
                    "description" : "Start date",
                    "format" : "int32"
                  },
                  "startTime" : {
                    "title" : "Start time",
                    "maximum" : 999999,
                    "type" : "integer",
                    "description" : "Start time",
                    "format" : "int32"
                  },
                  "completionDate" : {
                    "title" : "Completion date",
                    "maximum" : 99999999,
                    "type" : "integer",
                    "description" : "Completion date",
                    "format" : "int32"
                  },
                  "completionTime" : {
                    "title" : "Completion time",
                    "maximum" : 999999,
                    "type" : "integer",
                    "description" : "Completion time",
                    "format" : "int32"
                  },
                  "dueDate" : {
                    "title" : "due date",
                    "maximum" : 99999999,
                    "type" : "integer",
                    "description" : "due date",
                    "format" : "int32"
                  },
                  "status" : {
                    "title" : "Status",
                    "maxLength" : 1,
                    "type" : "string",
                    "description" : "Status"
                  },
                  "callType" : {
                    "title" : "Call Type",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Call Type"
                  },
                  "text" : {
                    "title" : "Text string",
                    "maxLength" : 1400,
                    "type" : "string",
                    "description" : "Text string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "completionTime" : {
                          "title" : "Completion time",
                          "maximum" : 999999,
                          "type" : "integer",
                          "description" : "Completion time",
                          "format" : "int32"
                        },
                        "incidentKey" : {
                          "title" : "Key",
                          "maxLength" : 8,
                          "type" : "string",
                          "description" : "Key"
                        },
                        "dueDate" : {
                          "title" : "Due date",
                          "maximum" : 99999999,
                          "type" : "integer",
                          "description" : "Due date",
                          "format" : "int32"
                        },
                        "startTime" : {
                          "title" : "Start time",
                          "maximum" : 999999,
                          "type" : "integer",
                          "description" : "Start time",
                          "format" : "int32"
                        },
                        "completionDate" : {
                          "title" : "Completion date",
                          "maximum" : 99999999,
                          "type" : "integer",
                          "description" : "Completion date",
                          "format" : "int32"
                        },
                        "text" : {
                          "title" : "Text string",
                          "maxLength" : 1400,
                          "type" : "string",
                          "description" : "Text string"
                        },
                        "user" : {
                          "title" : "User id",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "User id"
                        },
                        "startDate" : {
                          "title" : "Start date",
                          "maximum" : 99999999,
                          "type" : "integer",
                          "description" : "Start date",
                          "format" : "int32"
                        },
                        "callType" : {
                          "title" : "Call Type",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Call Type"
                        },
                        "timestamp" : {
                          "title" : "Timestamp in alpha format",
                          "maxLength" : 26,
                          "type" : "string",
                          "description" : "Timestamp in alpha format"
                        },
                        "customer" : {
                          "title" : "Customer number",
                          "maxLength" : 11,
                          "type" : "string",
                          "description" : "Customer number"
                        },
                        "status" : {
                          "title" : "Status",
                          "maxLength" : 1,
                          "type" : "string",
                          "description" : "Status"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "incident.update",
            "openCrossRef" : true,
            "program" : "MGRR0066"
          }
        }
      },
      "delete" : {
        "tags" : [ "Incident" ],
        "summary" : "This program is used to delete existing incident",
        "description" : "This program is used to delete existing incident",
        "parameters" : [ {
          "name" : "incidentKey",
          "in" : "path",
          "description" : "Key",
          "required" : true,
          "schema" : {
            "title" : "Key",
            "maxLength" : 8,
            "type" : "string",
            "description" : "Key"
          }
        }, {
          "name" : "user",
          "in" : "query",
          "description" : "User id",
          "schema" : {
            "title" : "User id",
            "maxLength" : 10,
            "type" : "string",
            "description" : "User id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "OK - no content"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "incident.delete",
            "openCrossRef" : true,
            "program" : "MGRR0067"
          }
        }
      }
    },
    "/instructionReleases" : {
      "put" : {
        "tags" : [ "Instruction" ],
        "summary" : "This program is used to release the instruction from Planned instructions",
        "description" : "This program is used to release the instruction from Planned instructions",
        "parameters" : [ {
          "name" : "warehouse",
          "in" : "query",
          "description" : "Warehouse",
          "required" : true,
          "schema" : {
            "title" : "Warehouse",
            "maxLength" : 3,
            "type" : "string",
            "description" : "Warehouse"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "activity" : {
                    "title" : "Stock activity",
                    "maxLength" : 4,
                    "type" : "string",
                    "description" : "Stock activity"
                  },
                  "suggestionNo" : {
                    "title" : "Suggestion No",
                    "maximum" : 999999999999,
                    "type" : "integer",
                    "description" : "Suggestion Number",
                    "format" : "int64"
                  },
                  "sequenceNo" : {
                    "title" : "Sequence No",
                    "maximum" : 99999,
                    "type" : "integer",
                    "description" : "Sequence Number",
                    "format" : "int32"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "instructionRelease.update",
            "openCrossRef" : true,
            "program" : "MGRR1037"
          }
        }
      }
    },
    "/inventoryAdjust/pharma/serialnumbers/cancel" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "This program is used to delete all scan/entered pharma serial numbers from inventory adjustment.",
        "description" : "This program is used to delete all scan/entered pharma serial numbers from inventory adjustment.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "item" ],
                "type" : "object",
                "properties" : {
                  "item" : {
                    "title" : "Item",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Item"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "inventoryAdjustPharmaSerial.cancel",
            "openCrossRef" : true,
            "program" : "MGRR1016E"
          }
        }
      }
    },
    "/warehouses/{warehouse}/items/{item}/inventoryAdjust/pharma/serialNumberInfo" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "This program is used to receive information for pharma serial item, used in inventory adjustment.",
        "description" : "This program is used to receive information for pharma serial item, used in inventory adjustment.",
        "parameters" : [ {
          "name" : "warehouse",
          "in" : "path",
          "description" : "Warehouse",
          "required" : true,
          "schema" : {
            "title" : "Warehouse",
            "maxLength" : 3,
            "type" : "string",
            "description" : "Warehouse"
          }
        }, {
          "name" : "item",
          "in" : "path",
          "description" : "Item",
          "required" : true,
          "schema" : {
            "title" : "Item",
            "maxLength" : 35,
            "type" : "string",
            "description" : "Item"
          }
        }, {
          "name" : "batch",
          "in" : "query",
          "description" : "Batch",
          "schema" : {
            "title" : "Batch",
            "maxLength" : 13,
            "type" : "string",
            "description" : "Batch"
          }
        }, {
          "name" : "originalQuantity",
          "in" : "query",
          "description" : "Original quantity",
          "schema" : {
            "title" : "Original quantity",
            "maximum" : 999999999999.999,
            "minimum" : -999999999999.999,
            "type" : "number",
            "description" : "Original quantity",
            "format" : "double"
          }
        }, {
          "name" : "actualQuantity",
          "in" : "query",
          "description" : "Actual quantity",
          "schema" : {
            "title" : "Actual quantity",
            "maximum" : 999999999999.999,
            "minimum" : -999999999999.999,
            "type" : "number",
            "description" : "Actual quantity",
            "format" : "double"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "callMode" : {
                          "title" : "Mode",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Mode"
                        },
                        "quantityRemaining" : {
                          "title" : "Quantity remaining",
                          "maximum" : 999999999999.999,
                          "minimum" : -999999999999.999,
                          "type" : "number",
                          "description" : "Quantity remaining",
                          "format" : "double"
                        },
                        "itemDescription" : {
                          "title" : "Item description",
                          "maxLength" : 50,
                          "type" : "string",
                          "description" : "Item description"
                        },
                        "quantityReceived" : {
                          "title" : "Quantity received",
                          "maximum" : 999999999999.999,
                          "minimum" : -999999999999.999,
                          "type" : "number",
                          "description" : "Quantity received",
                          "format" : "double"
                        },
                        "stockUnit" : {
                          "title" : "Stock unit",
                          "maxLength" : 5,
                          "type" : "string",
                          "description" : "Stock unit"
                        },
                        "scanComplete" : {
                          "title" : "Scan complete",
                          "type" : "boolean",
                          "description" : "Scan complete"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "inventoryAdjustPharmaSerialInfo.get",
            "openCrossRef" : true,
            "program" : "MGRR1016C"
          }
        }
      }
    },
    "/inventoryAdjust/pharma/serialnumbers/validate" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "This program is used to control if serial number for inventory adjustment has been made according to...",
        "description" : "This program is used to control if serial number for inventory adjustment has been made according to quantity to be adjusted. Error message or warning message could be send in return.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "callMode", "item" ],
                "type" : "object",
                "properties" : {
                  "item" : {
                    "title" : "Item",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Item"
                  },
                  "batch" : {
                    "title" : "Batch",
                    "maxLength" : 13,
                    "type" : "string",
                    "description" : "Batch"
                  },
                  "callMode" : {
                    "title" : "Mode",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Mode"
                  },
                  "quantityRemaining" : {
                    "title" : "Quantity remaining",
                    "maximum" : 999999999999.999,
                    "minimum" : -999999999999.999,
                    "type" : "number",
                    "description" : "Quantity remaining",
                    "format" : "double"
                  },
                  "originalQuantity" : {
                    "title" : "Original quantity",
                    "maximum" : 999999999999.999,
                    "minimum" : -999999999999.999,
                    "type" : "number",
                    "description" : "Original quantity",
                    "format" : "double"
                  },
                  "actualQuantity" : {
                    "title" : "Actual quantity",
                    "maximum" : 999999999999.999,
                    "minimum" : -999999999999.999,
                    "type" : "number",
                    "description" : "Actual quantity",
                    "format" : "double"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "inventoryAdjustPharmaSerial.validate",
            "openCrossRef" : true,
            "program" : "MGRR1016G"
          }
        }
      }
    },
    "/items/{item}/inventoryAdjust/pharma/serialnumbers" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "This program is used to retreive manually entered/scanned pharma serial numbers for inventory adjust...",
        "description" : "This program is used to retreive manually entered/scanned pharma serial numbers for inventory adjustment.",
        "parameters" : [ {
          "name" : "item",
          "in" : "path",
          "description" : "Item",
          "required" : true,
          "schema" : {
            "title" : "Item",
            "maxLength" : 35,
            "type" : "string",
            "description" : "Item"
          }
        }, {
          "name" : "actualBatch",
          "in" : "query",
          "description" : "Batch",
          "schema" : {
            "title" : "Batch",
            "maxLength" : 13,
            "type" : "string",
            "description" : "Batch"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "unit" : {
                                "title" : "Unit",
                                "maxLength" : 5,
                                "type" : "string",
                                "description" : "Unit"
                              },
                              "quantity" : {
                                "title" : "Order quantity",
                                "maximum" : 999999999999.999,
                                "minimum" : -999999999999.999,
                                "type" : "number",
                                "description" : "Order quantity",
                                "format" : "double"
                              },
                              "pharmaSerialNumber" : {
                                "title" : "Pharma serial number",
                                "maxLength" : 20,
                                "type" : "string",
                                "description" : "Pharma serial number"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "inventoryAdjustPharmaSerial.get",
            "openCrossRef" : true,
            "program" : "MGRR1016D"
          }
        }
      }
    },
    "/warehouses/{warehouse}/items/{item}/inventoryAdjust/pharma/serialnumbers" : {
      "put" : {
        "tags" : [ "Inventory" ],
        "summary" : "This program is used to update/confirm pharma serial number(s) for inventory adjustment",
        "description" : "This program is used to update/confirm pharma serial number(s) for inventory adjustment",
        "parameters" : [ {
          "name" : "warehouse",
          "in" : "path",
          "description" : "Warehouse",
          "required" : true,
          "schema" : {
            "title" : "Warehouse",
            "maxLength" : 3,
            "type" : "string",
            "description" : "Warehouse"
          }
        }, {
          "name" : "callMode",
          "in" : "query",
          "description" : "Mode",
          "required" : true,
          "schema" : {
            "title" : "Mode",
            "maxLength" : 10,
            "type" : "string",
            "description" : "Mode"
          }
        }, {
          "name" : "item",
          "in" : "path",
          "description" : "Item",
          "required" : true,
          "schema" : {
            "title" : "Item",
            "maxLength" : 35,
            "type" : "string",
            "description" : "Item"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "actualBatch" : {
                    "title" : "Batch",
                    "maxLength" : 13,
                    "type" : "string",
                    "description" : "Batch"
                  },
                  "pharmaSerialNumber" : {
                    "title" : "Scan/Enter serial number",
                    "maxLength" : 75,
                    "type" : "string",
                    "description" : "Scan/Enter serial number"
                  },
                  "pharmaSerialUnit" : {
                    "title" : "Unit",
                    "maxLength" : 5,
                    "type" : "string",
                    "description" : "Unit"
                  },
                  "useByDate" : {
                    "title" : "Expire date",
                    "maxLength" : 10,
                    "type" : "string",
                    "description" : "Expire date",
                    "format" : "date"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "inventoryAdjustPharmaSerial.update",
            "openCrossRef" : true,
            "program" : "MGRR1016A"
          }
        }
      }
    },
    "/warehouses/{warehouse}/items/{item}/inventoryAdjust/Pharma/serialNumers/delete" : {
      "delete" : {
        "tags" : [ "Inventory" ],
        "summary" : "This program is used to delete a selected temporary pharma serial number in inventory adjustment.",
        "description" : "This program is used to delete a selected temporary pharma serial number in inventory adjustment.",
        "parameters" : [ {
          "name" : "warehouse",
          "in" : "path",
          "description" : "Warehouse",
          "required" : true,
          "schema" : {
            "title" : "Warehouse",
            "maxLength" : 3,
            "type" : "string",
            "description" : "Warehouse"
          }
        }, {
          "name" : "item",
          "in" : "path",
          "description" : "Item",
          "required" : true,
          "schema" : {
            "title" : "Item",
            "maxLength" : 35,
            "type" : "string",
            "description" : "Item"
          }
        }, {
          "name" : "actualBatch",
          "in" : "query",
          "description" : "Batch",
          "schema" : {
            "title" : "Batch",
            "maxLength" : 13,
            "type" : "string",
            "description" : "Batch"
          }
        }, {
          "name" : "pharmaSerialNumber",
          "in" : "query",
          "description" : "Pharma serial number",
          "schema" : {
            "title" : "Pharma serial number",
            "maxLength" : 20,
            "type" : "string",
            "description" : "Pharma serial number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "OK - no content"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "inventoryAdjustPharmaSerial.delete",
            "openCrossRef" : true,
            "program" : "MGRR1016B"
          }
        }
      }
    },
    "/inventory/adjust" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "This program is used to adjust stock on hand, transit stock on hand, NCC usable stock on hand or NCC...",
        "description" : "This program is used to adjust stock on hand, transit stock on hand, NCC usable stock on hand or NCC unusable stock on hand for the specific piece of inventory. If a specific transaction type is not supplied, a default transaction type from the warehouse table, R/F info will be used",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "actualQuantity", "item", "location", "originalQuantity", "warehouse" ],
                "type" : "object",
                "properties" : {
                  "inventoryTransactionType" : {
                    "title" : "Transaction type",
                    "maximum" : 99999,
                    "type" : "integer",
                    "description" : "Transaction type",
                    "format" : "int32"
                  },
                  "warehouse" : {
                    "title" : "Warehouse",
                    "maxLength" : 3,
                    "type" : "string",
                    "description" : "Warehouse"
                  },
                  "item" : {
                    "title" : "Item",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Item"
                  },
                  "location" : {
                    "title" : "Location",
                    "maxLength" : 11,
                    "type" : "string",
                    "description" : "Location"
                  },
                  "actualQuantity" : {
                    "title" : "Actual quantity",
                    "maximum" : 999999999999.999,
                    "minimum" : -999999999999.999,
                    "type" : "number",
                    "description" : "Actual quantity",
                    "format" : "double"
                  },
                  "originalQuantity" : {
                    "title" : "Original quantity",
                    "maximum" : 999999999999.999,
                    "minimum" : -999999999999.999,
                    "type" : "number",
                    "description" : "Original quantity",
                    "format" : "double"
                  },
                  "batch" : {
                    "title" : "Batch",
                    "maxLength" : 13,
                    "type" : "string",
                    "description" : "Batch"
                  },
                  "palletNumber" : {
                    "title" : "Pallet number",
                    "maxLength" : 18,
                    "type" : "string",
                    "description" : "Pallet number"
                  },
                  "nonConformityCertificate" : {
                    "title" : "NCC number",
                    "maximum" : 999999999999,
                    "type" : "integer",
                    "description" : "NCC number",
                    "format" : "int64"
                  },
                  "orderReferenceNumber" : {
                    "title" : "Order reference number",
                    "maximum" : 999999999999,
                    "type" : "integer",
                    "description" : "Order reference number",
                    "format" : "int64"
                  },
                  "orderReferenceLineNumber" : {
                    "title" : "Order reference line number",
                    "maximum" : 99999,
                    "type" : "integer",
                    "description" : "Order reference line number",
                    "format" : "int32"
                  },
                  "serialNo" : {
                    "title" : "Serial number",
                    "maxLength" : 20,
                    "type" : "string",
                    "description" : "Serial number"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "inventoryRF.adjust",
            "openCrossRef" : true,
            "program" : "MGRR1016"
          }
        }
      }
    },
    "/inventory/validate" : {
      "post" : {
        "tags" : [ "Inventory" ],
        "summary" : "This program is used to validate inventory input fields for mobile device.",
        "description" : "This program is used to validate inventory input fields for mobile device.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "actualQuantity", "item", "location", "originalQuantity", "warehouse" ],
                "type" : "object",
                "properties" : {
                  "inventoryTransactionType" : {
                    "title" : "Transaction type",
                    "maximum" : 99999,
                    "type" : "integer",
                    "description" : "Transaction type",
                    "format" : "int32"
                  },
                  "warehouse" : {
                    "title" : "Warehouse",
                    "maxLength" : 3,
                    "type" : "string",
                    "description" : "Warehouse"
                  },
                  "item" : {
                    "title" : "Item",
                    "maxLength" : 35,
                    "type" : "string",
                    "description" : "Item"
                  },
                  "location" : {
                    "title" : "Location",
                    "maxLength" : 11,
                    "type" : "string",
                    "description" : "Location"
                  },
                  "actualQuantity" : {
                    "title" : "Actual quantity",
                    "maximum" : 999999999999.999,
                    "minimum" : -999999999999.999,
                    "type" : "number",
                    "description" : "Actual quantity",
                    "format" : "double"
                  },
                  "originalQuantity" : {
                    "title" : "Original quantity",
                    "maximum" : 999999999999.999,
                    "minimum" : -999999999999.999,
                    "type" : "number",
                    "description" : "Original quantity",
                    "format" : "double"
                  },
                  "batch" : {
                    "title" : "Batch",
                    "maxLength" : 13,
                    "type" : "string",
                    "description" : "Batch"
                  },
                  "palletNumber" : {
                    "title" : "Pallet number",
                    "maxLength" : 18,
                    "type" : "string",
                    "description" : "Pallet number"
                  },
                  "nonConformityCertificate" : {
                    "title" : "NCC number",
                    "maximum" : 999999999999,
                    "type" : "integer",
                    "description" : "NCC number",
                    "format" : "int64"
                  },
                  "orderReferenceNumber" : {
                    "title" : "Order reference number",
                    "maximum" : 999999999999,
                    "type" : "integer",
                    "description" : "Order reference number",
                    "format" : "int64"
                  },
                  "orderReferenceLineNumber" : {
                    "title" : "Order reference line number",
                    "maximum" : 99999,
                    "type" : "integer",
                    "description" : "Order reference line number",
                    "format" : "int32"
                  },
                  "serialNo" : {
                    "title" : "Serial number",
                    "maxLength" : 20,
                    "type" : "string",
                    "description" : "Serial number"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "inventoryRF.validate",
            "openCrossRef" : true,
            "program" : "MGRR1016F"
          }
        }
      }
    },
    "/inventoryTransactionsTypes" : {
      "get" : {
        "tags" : [ "Inventory" ],
        "summary" : "This program is used to retrieve user defined inventory transaction types, i.",
        "description" : "This program is used to retrieve user defined inventory transaction types, i.e. transaction type 1000 or greater",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "description" : {
                                "title" : "Description",
                                "maxLength" : 30,
                                "type" : "string",
                                "description" : "Description"
                              },
                              "inventoryTransactionType" : {
                                "title" : "Inventory transaction type",
                                "maximum" : 99999,
                                "type" : "integer",
                                "description" : "Inventory transaction type",
                                "format" : "int32"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "inventoryTransactionTypes.get",
            "openCrossRef" : false,
            "program" : "MGRR0093"
          }
        }
      }
    },
    "/invoices/{invoiceNumber}/addresses/{addressTypeCode}" : {
      "get" : {
        "tags" : [ "Invoice", "Peppol" ],
        "summary" : "This program is used to get invoice address information for a selected invoice number and address ty...",
        "description" : "This program is used to get invoice address information for a selected invoice number and address type.",
        "parameters" : [ {
          "name" : "addressTypeCode",
          "in" : "path",
          "description" : "Address type",
          "required" : true,
          "schema" : {
            "title" : "Address type",
            "maxLength" : 1,
            "type" : "string",
            "description" : "Address type"
          }
        }, {
          "name" : "documentType",
          "in" : "query",
          "required": true,
          "description" : "Document type",
          "schema" : {
            "title" : "Document type",
            "maxLength" : 3,
            "type" : "string",
            "description" : "Document type"
          }
        }, {
          "name" : "invoiceNumber",
          "in" : "path",
          "required": true,
          "description" : "Invoice number",
          "schema" : {
            "title" : "Invoice number",
            "maximum" : 999999999999,
            "type" : "integer",
            "description" : "Invoice number",
            "format" : "int64"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "required": true,
          "description" : "Type",
          "schema" : {
            "title" : "Type",
            "maximum" : 9,
            "type" : "integer",
            "description" : "Type",
            "format" : "int32"
          }
        }, {
          "name" : "invoiceYear",
          "in" : "query",
          "required": true,
          "description" : "Invoice year",
          "schema" : {
            "title" : "Invoice year",
            "maximum" : 9999,
            "type" : "integer",
            "description" : "Invoice year",
            "format" : "int32"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "required": true,
          "description" : "Order number",
          "schema" : {
            "title" : "Order number",
            "maximum" : 999999999999,
            "type" : "integer",
            "description" : "Order number",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "country" : {
                          "title" : "Country",
                          "maxLength" : 4,
                          "type" : "string",
                          "description" : "Country"
                        },
                        "addressCategory" : {
                          "title" : "Address category",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Address category"
                        },
                        "vatRegistrationNo" : {
                          "title" : "VAT registration number",
                          "maxLength" : 16,
                          "type" : "string",
                          "description" : "VAT registration number"
                        },
                        "recordFound" : {
                          "title" : "Record found",
                          "type" : "boolean",
                          "description" : "Record found"
                        },
                        "postalCode" : {
                          "title" : "Postal code",
                          "maxLength" : 16,
                          "type" : "string",
                          "description" : "Postal code"
                        },
                        "name" : {
                          "title" : "Name",
                          "maxLength" : 30,
                          "type" : "string",
                          "description" : "Name"
                        },
                        "addressLine1" : {
                          "title" : "Address line 1",
                          "maxLength" : 35,
                          "type" : "string",
                          "description" : "Address line 1"
                        },
                        "addressLine2" : {
                          "title" : "Address line 2",
                          "maxLength" : 35,
                          "type" : "string",
                          "description" : "Address line 2"
                        },
                        "addressLine3" : {
                          "title" : "Address line 3",
                          "maxLength" : 35,
                          "type" : "string",
                          "description" : "Address line 3"
                        },
                        "addressLine4" : {
                          "title" : "Address line 4",
                          "maxLength" : 35,
                          "type" : "string",
                          "description" : "Address line 4"
                        },
                        "invoiceStatus" : {
                          "title" : "Invoice status",
                          "maxLength" : 3,
                          "type" : "string",
                          "description" : "Invoice status"
                        },
                        "addressSequenceNumber" : {
                          "title" : "Address sequence number",
                          "maximum" : 99999,
                          "type" : "integer",
                          "description" : "Address sequence number",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "invoiceAddress.get",
            "openCrossRef" : true,
            "program" : "MGRR1405"
          }
        }
      }
    },
    "/SIPinvoices/{internalNumber}/addresses/{addressTypeCode}" : {
      "get" : {
        "tags" : [ "Invoice", "Peppol" ],
        "summary" : "This program is used to get invoice address information for a selected invoice number and address ty...",
        "description" : "This program is used to get invoice address information for a selected invoice number and address type.",
        "parameters" : [ {
          "name" : "addressTypeCode",
          "in" : "path",
          "description" : "Address type",
          "required" : true,
          "schema" : {
            "title" : "Address type",
            "maxLength" : 1,
            "type" : "string",
            "description" : "Address type"
          }
        }, {
          "name" : "internalNumber",
          "in" : "path",
          "required": true,
          "description" : "Internal number",
          "schema" : {
            "title" : "Internal number",
            "maximum" : 999999999999,
            "type" : "integer",
            "description" : "Internal number",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "country" : {
                          "title" : "Country",
                          "maxLength" : 4,
                          "type" : "string",
                          "description" : "Country"
                        },
                        "addressCategory" : {
                          "title" : "Address category",
                          "maxLength" : 10,
                          "type" : "string",
                          "description" : "Address category"
                        },
                        "vatRegistrationNo" : {
                          "title" : "VAT registration number",
                          "maxLength" : 16,
                          "type" : "string",
                          "description" : "VAT registration number"
                        },
                        "recordFound" : {
                          "title" : "Record found",
                          "type" : "boolean",
                          "description" : "Record found"
                        },
                        "postalCode" : {
                          "title" : "Postal code",
                          "maxLength" : 16,
                          "type" : "string",
                          "description" : "Postal code"
                        },
                        "name" : {
                          "title" : "Name",
                          "maxLength" : 30,
                          "type" : "string",
                          "description" : "Name"
                        },
                        "addressLine1" : {
                          "title" : "Address line 1",
                          "maxLength" : 35,
                          "type" : "string",
                          "description" : "Address line 1"
                        },
                        "addressLine2" : {
                          "title" : "Address line 2",
                          "maxLength" : 35,
                          "type" : "string",
                          "description" : "Address line 2"
                        },
                        "addressLine3" : {
                          "title" : "Address line 3",
                          "maxLength" : 35,
                          "type" : "string",
                          "description" : "Address line 3"
                        },
                        "addressLine4" : {
                          "title" : "Address line 4",
                          "maxLength" : 35,
                          "type" : "string",
                          "description" : "Address line 4"
                        },
                        "invoiceStatus" : {
                          "title" : "Invoice status",
                          "maxLength" : 3,
                          "type" : "string",
                          "description" : "Invoice status"
                        },
                        "addressSequenceNumber" : {
                          "title" : "Address sequence number",
                          "maximum" : 99999,
                          "type" : "integer",
                          "description" : "Address sequence number",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "invoiceAddress.get",
            "openCrossRef" : true,
            "program" : "MGRR1405"
          }
        }
      }
    },
    "/companies/current/invoiceInfo" : {
      "get" : {
        "tags" : [ "Invoice", "Peppol" ],
        "summary" : "This program is used to get get bank and address information on a selected invoice.",
        "description" : "This program is used to get get bank and address information on a selected invoice.",
        "parameters" : [ {
          "name" : "documentType",
          "in" : "query",
          "description" : "Document type",
          "schema" : {
            "title" : "Document type",
            "maxLength" : 3,
            "type" : "string",
            "description" : "Document type"
          }
        }, {
          "name" : "invoiceNumber",
          "in" : "query",
          "description" : "Invoice number",
          "schema" : {
            "title" : "Invoice number",
            "maximum" : 999999999999,
            "type" : "integer",
            "description" : "Invoice number",
            "format" : "int64"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Type",
          "schema" : {
            "title" : "Type",
            "maximum" : 9,
            "type" : "integer",
            "description" : "Type",
            "format" : "int32"
          }
        }, {
          "name" : "invoiceYear",
          "in" : "query",
          "description" : "Invoice year",
          "schema" : {
            "title" : "Invoice year",
            "maximum" : 9999,
            "type" : "integer",
            "description" : "Invoice year",
            "format" : "int32"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "Order number",
          "schema" : {
            "title" : "Order number",
            "maximum" : 999999999999,
            "type" : "integer",
            "description" : "Order number",
            "format" : "int64"
          }
        }, {
          "name" : "internalNumber",
          "in" : "query",
          "description" : "Internal number",
          "schema" : {
            "title" : "Internal number",
            "maximum" : 999999999999,
            "type" : "integer",
            "description" : "Internal number",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "country" : {
                          "title" : "Country",
                          "maxLength" : 4,
                          "type" : "string",
                          "description" : "Country"
                        },
                        "postalCode" : {
                          "title" : "Postal code",
                          "maxLength" : 16,
                          "type" : "string",
                          "description" : "Postal code"
                        },
                        "county" : {
                          "title" : "County code",
                          "maxLength" : 5,
                          "type" : "string",
                          "description" : "County code"
                        },
                        "ibanAccountNo" : {
                          "title" : "International bank account number",
                          "maxLength" : 34,
                          "type" : "string",
                          "description" : "International bank account number"
                        },
                        "bankName" : {
                          "title" : "Bank name",
                          "maxLength" : 30,
                          "type" : "string",
                          "description" : "Bank name"
                        },
                        "eMailAddress" : {
                          "title" : "E-mail address",
                          "maxLength" : 50,
                          "type" : "string",
                          "description" : "E-mail address"
                        },
                        "homePage" : {
                          "title" : "Home page",
                          "maxLength" : 50,
                          "type" : "string",
                          "description" : "Home page"
                        },
                        "bankAddress" : {
                          "title" : "Bank address",
                          "maxLength" : 35,
                          "type" : "string",
                          "description" : "Bank address"
                        },
                        "taxJurisdictionCode" : {
                          "title" : "Tax Jurisdiction Code",
                          "maxLength" : 12,
                          "type" : "string",
                          "description" : "Tax Jurisdiction Code"
                        },
                        "vatRegisterOffice" : {
                          "title" : "Vat register office",
                          "maxLength" : 30,
                          "type" : "string",
                          "description" : "Vat register office"
                        },
                        "bankIdentificationCode" : {
                          "title" : "Bank identification code",
                          "maxLength" : 11,
                          "type" : "string",
                          "description" : "Bank identification code"
                        },
                        "phoneNumber" : {
                          "title" : "Phone number",
                          "maxLength" : 35,
                          "type" : "string",
                          "description" : "Phone number"
                        },
                        "vatRegistrationNo" : {
                          "title" : "VAT registration number",
                          "maxLength" : 16,
                          "type" : "string",
                          "description" : "VAT registration number"
                        },
                        "recordFound" : {
                          "title" : "Record found",
                          "type" : "boolean",
                          "description" : "Record found"
                        },
                        "registrationNo" : {
                          "title" : "Company registration number",
                          "maxLength" : 16,
                          "type" : "string",
                          "description" : "Company registration number"
                        },
                        "businessIdentityText" : {
                          "title" : "Business Identity text",
                          "maxLength" : 30,
                          "type" : "string",
                          "description" : "Business Identity text"
                        },
                        "name" : {
                          "title" : "Company name",
                          "maxLength" : 30,
                          "type" : "string",
                          "description" : "Company name"
                        },
                        "addressLine1" : {
                          "title" : "Address line 1",
                          "maxLength" : 35,
                          "type" : "string",
                          "description" : "Address line 1"
                        },
                        "faxNumber" : {
                          "title" : "Fax number",
                          "maxLength" : 35,
                          "type" : "string",
                          "description" : "Fax number"
                        },
                        "swiftAddress" : {
                          "title" : "Swift address",
                          "maxLength" : 17,
                          "type" : "string",
                          "description" : "Swift address"
                        },
                        "addressLine2" : {
                          "title" : "Address line 2",
                          "maxLength" : 35,
                          "type" : "string",
                          "description" : "Address line 2"
                        },
                        "addressLine3" : {
                          "title" : "Address line 3",
                          "maxLength" : 35,
                          "type" : "string",
                          "description" : "Address line 3"
                        },
                        "state" : {
                          "title" : "State/Province Code",
                          "maxLength" : 2,
                          "type" : "string",
                          "description" : "State/Province Code"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Client error",
            "$ref" : "#/components/responses/default-error"
          }
        },
        "x-aperio" : {
          "control-parameters" : {
            "method" : "invoiceCompanyInfo.get",
            "openCrossRef" : true,
            "program" : "MGRR1411"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "default-error" : {
        "type" : "object",
        "properties" : {
          "messages" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "error" : {
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "integer"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "control-freeTextSearch" : {
        "title" : "Free text search",
        "maxLength" : 200,
        "type" : "string",
        "description" : "Words, space divided used to search trough database"
      },
      "control-offset" : {
        "title" : "Start offset",
        "maximum" : 999999999,
        "type" : "integer",
        "description" : "Start offset used for paging",
        "format" : "int32"
      },
      "control-accept-response" : {
        "title" : "accept-response",
        "maxLength" : 200,
        "type" : "string",
        "description" : "List of elements from IADF response which should be included in res"
      },
      "control-limit" : {
        "title" : "Limit of records",
        "maximum" : 999999999,
        "type" : "integer",
        "description" : "Maximum number of records in one response",
        "format" : "int32"
      },
      "control-orderBy" : {
        "title" : "Order by",
        "maxLength" : 200,
        "type" : "string",
        "description" : "Database fields space divided which describes order of result respo"
      },
      "control-fields" : {
        "title" : "Fields",
        "maxLength" : 200,
        "type" : "string",
        "description" : "List of fields which should be returned in response"
      },
      "control-total" : {
        "title" : "Total records",
        "maximum" : 999999999,
        "type" : "integer",
        "description" : "Total number of records in file (array)",
        "format" : "int32"
      },
      "control-more" : {
        "title" : "More records",
        "type" : "boolean",
        "description" : "Indicates if there are more records in file"
      }
    },
    "responses" : {
      "default-error" : {
        "description" : "Default error response",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/default-error"
            }
          }
        }
      }
    },
    "parameters" : {
      "control-freeTextSearch" : {
        "name" : "freeTextSearch",
        "in" : "query",
        "description" : "Words, space divided used to search trough database",
        "schema" : {
          "$ref" : "#/components/schemas/control-freeTextSearch"
        },
        "x-aperio" : {
          "in" : "control"
        }
      },
      "control-offset" : {
        "name" : "offset",
        "in" : "query",
        "description" : "Start offset used for paging",
        "schema" : {
          "$ref" : "#/components/schemas/control-offset"
        },
        "x-aperio" : {
          "in" : "control"
        }
      },
      "control-accept-response" : {
        "name" : "accept-response",
        "in" : "query",
        "description" : "List of elements from IADF response which should be included in res",
        "schema" : {
          "$ref" : "#/components/schemas/control-accept-response"
        },
        "x-aperio" : {
          "in" : "control"
        }
      },
      "control-limit" : {
        "name" : "limit",
        "in" : "query",
        "description" : "Maximum number of records in one response",
        "schema" : {
          "$ref" : "#/components/schemas/control-limit"
        },
        "x-aperio" : {
          "in" : "control"
        }
      },
      "control-orderBy" : {
        "name" : "orderBy",
        "in" : "query",
        "description" : "Database fields space divided which describes order of result respo",
        "schema" : {
          "$ref" : "#/components/schemas/control-orderBy"
        },
        "x-aperio" : {
          "in" : "control"
        }
      },
      "control-fields" : {
        "name" : "fields",
        "in" : "query",
        "description" : "List of fields which should be returned in response",
        "schema" : {
          "$ref" : "#/components/schemas/control-fields"
        },
        "x-aperio" : {
          "in" : "control"
        }
      }
    }
  }
}
